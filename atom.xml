<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>世上本无路，庸人自扰之</title>
  <subtitle>世上本无路，庸人自扰之</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jeromeliu.win/"/>
  <updated>2017-04-24T02:34:58.176Z</updated>
  <id>http://jeromeliu.win/</id>
  
  <author>
    <name>JeromeLiu</name>
    <email>2412903432@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Kubernetes 搭建jenkins</title>
    <link href="http://jeromeliu.win/2017/04/24/Kubernetes-%E6%90%AD%E5%BB%BAjenkins/"/>
    <id>http://jeromeliu.win/2017/04/24/Kubernetes-搭建jenkins/</id>
    <published>2017-04-24T02:32:48.000Z</published>
    <updated>2017-04-24T02:34:58.176Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="容器化" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
      <category term="服务搭建" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Kubernetes" scheme="http://jeromeliu.win/tags/Kubernetes/"/>
    
      <category term="Docker" scheme="http://jeromeliu.win/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 搭建kube-dns</title>
    <link href="http://jeromeliu.win/2017/04/24/Kubernetes-%E6%90%AD%E5%BB%BAkube-dns/"/>
    <id>http://jeromeliu.win/2017/04/24/Kubernetes-搭建kube-dns/</id>
    <published>2017-04-24T02:14:23.000Z</published>
    <updated>2017-04-24T02:27:06.583Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote>

<h2 id="第一种方案-容器部署方案"><a href="#第一种方案-容器部署方案" class="headerlink" title="第一种方案(容器部署方案)"></a>第一种方案(容器部署方案)</h2><h3 id="拉取官方kube-dns-yaml文件"><a href="#拉取官方kube-dns-yaml文件" class="headerlink" title="拉取官方kube-dns yaml文件"></a>拉取官方kube-dns yaml文件</h3><p>wget <a href="https://rawgit.com/kubernetes/kubernetes/release-1.5/cluster/addons/dns/skydns-rc.yaml.sed" target="_blank" rel="external">https://rawgit.com/kubernetes/kubernetes/release-1.5/cluster/addons/dns/skydns-rc.yaml.sed</a> -O skydns-rc.yaml</p>
<p>wget <a href="https://rawgit.com/kubernetes/kubernetes/release-1.5/cluster/addons/dns/skydns-svc.yaml.sed" target="_blank" rel="external">https://rawgit.com/kubernetes/kubernetes/release-1.5/cluster/addons/dns/skydns-svc.yaml.sed</a> -O skydns-svc.yaml</p>
<h3 id="编辑yaml文件"><a href="#编辑yaml文件" class="headerlink" title="编辑yaml文件"></a>编辑yaml文件</h3><p>编辑 skydns-rc.yaml</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div></pre></td><td class="code"><pre><div class="line"># Copyright 2016 The Kubernetes Authors.</div><div class="line">#</div><div class="line"># Licensed under the Apache License, Version 2.0 (the "License");</div><div class="line"># you may not use this file except in compliance with the License.</div><div class="line"># You may obtain a copy of the License at</div><div class="line">#</div><div class="line">#     http://www.apache.org/licenses/LICENSE-2.0</div><div class="line">#</div><div class="line"># Unless required by applicable law or agreed to in writing, software</div><div class="line"># distributed under the License is distributed on an "AS IS" BASIS,</div><div class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</div><div class="line"># See the License for the specific language governing permissions and</div><div class="line"># limitations under the License.</div><div class="line"></div><div class="line"># TODO - At some point, we need to rename all skydns-*.yaml.* files to kubedns-*.yaml.*</div><div class="line"># Should keep target in cluster/addons/dns-horizontal-autoscaler/dns-horizontal-autoscaler.yaml</div><div class="line"># in sync with this file.</div><div class="line"></div><div class="line"># Warning: This is a file generated from the base underscore template file: skydns-rc.yaml.base</div><div class="line"></div><div class="line">apiVersion: extensions/v1beta1</div><div class="line">kind: Deployment</div><div class="line">metadata:</div><div class="line">  name: kube-dns</div><div class="line">  namespace: kube-system</div><div class="line">  labels:</div><div class="line">    k8s-app: kube-dns</div><div class="line">    kubernetes.io/cluster-service: "true"</div><div class="line">spec:</div><div class="line">  #指定副本数</div><div class="line">  replicas: 1</div><div class="line">  # replicas: not specified here:</div><div class="line">  # 1. In order to make Addon Manager do not reconcile this replicas parameter.</div><div class="line">  # 2. Default is 1.</div><div class="line">  # 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</div><div class="line">  strategy:</div><div class="line">    rollingUpdate:</div><div class="line">      maxSurge: 10%</div><div class="line">      maxUnavailable: 0</div><div class="line">  selector:</div><div class="line">    matchLabels:</div><div class="line">      k8s-app: kube-dns</div><div class="line">  template:</div><div class="line">    metadata:</div><div class="line">      labels:</div><div class="line">        k8s-app: kube-dns</div><div class="line">      annotations:</div><div class="line">        scheduler.alpha.kubernetes.io/critical-pod: ''</div><div class="line">        scheduler.alpha.kubernetes.io/tolerations: '[&#123;"key":"CriticalAddonsOnly", "operator":"Exists"&#125;]'</div><div class="line">    spec:</div><div class="line">      containers:</div><div class="line">      - name: kubedns</div><div class="line">        image: 192.168.204.66/google_containers/kubedns-amd64:1.9</div><div class="line">        resources:</div><div class="line">          # TODO: Set memory limits when we've profiled the container for large</div><div class="line">          # clusters, then set request = limit to keep this container in</div><div class="line">          # guaranteed class. Currently, this container falls into the</div><div class="line">          # "burstable" category so the kubelet doesn't backoff from restarting it.</div><div class="line">          limits:</div><div class="line">            memory: 170Mi</div><div class="line">          requests:</div><div class="line">            cpu: 100m</div><div class="line">            memory: 70Mi</div><div class="line">        livenessProbe:</div><div class="line">          httpGet:</div><div class="line">            path: /healthz-kubedns</div><div class="line">            port: 8080</div><div class="line">            scheme: HTTP</div><div class="line">          initialDelaySeconds: 60</div><div class="line">          timeoutSeconds: 5</div><div class="line">          successThreshold: 1</div><div class="line">          failureThreshold: 5</div><div class="line">        readinessProbe:</div><div class="line">          httpGet:</div><div class="line">            path: /readiness</div><div class="line">            port: 8081</div><div class="line">            scheme: HTTP</div><div class="line">          # we poll on pod startup for the Kubernetes master service and</div><div class="line">          # only setup the /readiness HTTP server once that's available.</div><div class="line">          initialDelaySeconds: 3</div><div class="line">          timeoutSeconds: 5</div><div class="line">        args:</div><div class="line">        # --domain指定一级域名，可自定义</div><div class="line">        # - --domain=$DNS_DOMAIN.</div><div class="line">        - --domain=cluster.local #设置k8s集群中Service所属的域名</div><div class="line">        - --dns-port=10053</div><div class="line">        - --config-map=kube-dns</div><div class="line">        # 增加--kube-master-url，指向kube master的地址</div><div class="line">        - --kube-master-url=https://10.200.102.93:6443 #k8s中master的ip地址和apiserver中配置的端口号</div><div class="line">        - --kubecfg_file=/etc/kubernetes/worker-kubeconfig.yaml</div><div class="line">        # This should be set to v=2 only after the new image (cut from 1.5) has</div><div class="line">        # been released, otherwise we will flood the logs.</div><div class="line">        - --v=0</div><div class="line">        volumeMounts:</div><div class="line">        - mountPath: /etc/kubernetes/ssl</div><div class="line">          name: ssl-certs-kubernetes</div><div class="line">        - mountPath: /etc/ssl/certs</div><div class="line">          name: ssl-certs-host</div><div class="line">        - mountPath: /etc/kubernetes/worker-kubeconfig.yaml</div><div class="line">          name: config</div><div class="line">        env:</div><div class="line">        - name: PROMETHEUS_PORT</div><div class="line">          value: "10055"</div><div class="line">        ports:</div><div class="line">        - containerPort: 10053</div><div class="line">          name: dns-local</div><div class="line">          protocol: UDP</div><div class="line">        - containerPort: 10053</div><div class="line">          name: dns-tcp-local</div><div class="line">          protocol: TCP</div><div class="line">        - containerPort: 10055</div><div class="line">          name: metrics</div><div class="line">          protocol: TCP</div><div class="line">      - name: dnsmasq</div><div class="line">        image: 192.168.204.66/google_containers/kube-dnsmasq-amd64:1.4</div><div class="line">        livenessProbe:</div><div class="line">          httpGet:</div><div class="line">            path: /healthz-dnsmasq</div><div class="line">            port: 8080</div><div class="line">            scheme: HTTP</div><div class="line">          initialDelaySeconds: 60</div><div class="line">          timeoutSeconds: 5</div><div class="line">          successThreshold: 1</div><div class="line">          failureThreshold: 5</div><div class="line">        args:</div><div class="line">        - --cache-size=1000</div><div class="line">        - --no-resolv</div><div class="line">        - --server=127.0.0.1#10053</div><div class="line">        # - --log-facility=-</div><div class="line">        ports:</div><div class="line">        - containerPort: 53</div><div class="line">          name: dns</div><div class="line">          protocol: UDP</div><div class="line">        - containerPort: 53</div><div class="line">          name: dns-tcp</div><div class="line">          protocol: TCP</div><div class="line">        # see: https://github.com/kubernetes/kubernetes/issues/29055 for details</div><div class="line">        resources:</div><div class="line">          requests:</div><div class="line">            cpu: 150m</div><div class="line">            memory: 10Mi</div><div class="line">      - name: dnsmasq-metrics</div><div class="line">        image: 192.168.204.66/google_containers/dnsmasq-metrics-amd64:1.0</div><div class="line">        livenessProbe:</div><div class="line">          httpGet:</div><div class="line">            path: /metrics</div><div class="line">            port: 10054</div><div class="line">            scheme: HTTP</div><div class="line">          initialDelaySeconds: 60</div><div class="line">          timeoutSeconds: 5</div><div class="line">          successThreshold: 1</div><div class="line">          failureThreshold: 5</div><div class="line">        args:</div><div class="line">        - --v=2</div><div class="line">        - --logtostderr</div><div class="line">        ports:</div><div class="line">        - containerPort: 10054</div><div class="line">          name: metrics</div><div class="line">          protocol: TCP</div><div class="line">        resources:</div><div class="line">          requests:</div><div class="line">            memory: 10Mi</div><div class="line">      - name: healthz</div><div class="line">        image: 192.168.204.66/google_containers/exechealthz-amd64:1.2</div><div class="line">        resources:</div><div class="line">          limits:</div><div class="line">            memory: 50Mi</div><div class="line">          requests:</div><div class="line">            cpu: 10m</div><div class="line">            # Note that this container shouldn't really need 50Mi of memory. The</div><div class="line">            # limits are set higher than expected pending investigation on #29688.</div><div class="line">            # The extra memory was stolen from the kubedns container to keep the</div><div class="line">            # net memory requested by the pod constant.</div><div class="line">            memory: 50Mi</div><div class="line">        args:</div><div class="line">        - --cmd=nslookup kubernetes.default.svc.cluster.local 127.0.0.1 &gt;/dev/null</div><div class="line">        - --url=/healthz-dnsmasq</div><div class="line">        - --cmd=nslookup kubernetes.default.svc.cluster.local 127.0.0.1:10053 &gt;/dev/null</div><div class="line">        - --url=/healthz-kubedns</div><div class="line">        - --port=8080</div><div class="line">        - --quiet</div><div class="line">        ports:</div><div class="line">        - containerPort: 8080</div><div class="line">          protocol: TCP</div><div class="line">      dnsPolicy: Default  # Don't use cluster DNS.</div><div class="line">      volumes:</div><div class="line">      - name: etcd-storage</div><div class="line">        emptyDir: &#123;&#125;</div><div class="line">      - hostPath:</div><div class="line">          path: /etc/kubernetes/ssl</div><div class="line">        name: ssl-certs-kubernetes</div><div class="line">      - hostPath:</div><div class="line">          path: /etc/pki/tls/certs</div><div class="line">        name: ssl-certs-host</div><div class="line">      - hostPath:</div><div class="line">          path: /etc/kubernetes/worker-kubeconfig.yaml</div><div class="line">        name: config</div></pre></td></tr></table></figure>
<p>编辑skydns-svc.yaml文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># cat sky-dns/skydns-svc.yaml </span></div><div class="line"># Copyright <span class="number">2016</span> The Kubernetes Authors.</div><div class="line">#</div><div class="line"># Licensed under the Apache License, Version <span class="number">2.0</span> (the <span class="string">"License"</span>);</div><div class="line"><span class="meta"># you may not use this file except in compliance with the License.</span></div><div class="line"># You may obtain a copy of the License at</div><div class="line">#</div><div class="line"><span class="meta">#     http:<span class="comment">//www.apache.org/licenses/LICENSE-2.0</span></span></div><div class="line">#</div><div class="line"># Unless required by applicable law or agreed to in writing, software</div><div class="line"><span class="meta"># distributed under the License is distributed on an <span class="meta-string">"AS IS"</span> BASIS,</span></div><div class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</div><div class="line"># See the License <span class="keyword">for</span> the specific language governing permissions and</div><div class="line"><span class="meta"># limitations under the License.</span></div><div class="line"></div><div class="line"># TODO - At some point, we need to rename all skydns-*.yaml.* files to kubedns-*.yaml.*</div><div class="line"></div><div class="line"># Warning: This is a file generated from the base underscore <span class="keyword">template</span> file: skydns-svc.yaml.base</div><div class="line"></div><div class="line">apiVersion: v1</div><div class="line">kind: Service</div><div class="line">metadata:</div><div class="line">  name: kube-dns</div><div class="line">  <span class="keyword">namespace</span>: kube-system</div><div class="line">  labels:</div><div class="line">    k8s-app: kube-dns</div><div class="line">    kubernetes.io/cluster-service: <span class="string">"true"</span></div><div class="line">    kubernetes.io/name: <span class="string">"KubeDNS"</span></div><div class="line">spec:</div><div class="line">  selector:</div><div class="line">    k8s-app: kube-dns</div><div class="line">  clusterIP: <span class="number">172.30</span><span class="number">.0</span><span class="number">.3</span>   #/etc/kubernetes/kubelet中已经设定好clusterIP</div><div class="line">  ports:</div><div class="line">  - name: dns</div><div class="line">    port: <span class="number">53</span></div><div class="line">    protocol: UDP</div><div class="line">  - name: dns-tcp</div><div class="line">    port: <span class="number">53</span></div></pre></td></tr></table></figure></p>
<h3 id="运行yaml文件"><a href="#运行yaml文件" class="headerlink" title="运行yaml文件"></a>运行yaml文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@seanzhau.com ~]<span class="meta"># kubectl create -f skydns-rc.yaml</span></div><div class="line">[root@seanzhau.com ~]<span class="meta"># kubectl create -f skydns-svc.yaml</span></div><div class="line">[root@seanzhau.com ~]<span class="meta"># kubectl create -f busybox.yaml</span></div></pre></td></tr></table></figure>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p><img src="/uploads/Kubernetes 搭建kube-dns/dns.png" alt="dns"></p>
<h2 id="第二种方案-插件-命令部署方案"><a href="#第二种方案-插件-命令部署方案" class="headerlink" title="第二种方案(插件/命令部署方案)"></a>第二种方案(插件/命令部署方案)</h2><p><span style="color:red">该方案目前尚未寻找到支持TLS的方案实现，但木有已经实现了无数字证书验证的方案。</span></p>
<h3 id="下载kube-dns命令"><a href="#下载kube-dns命令" class="headerlink" title="下载kube-dns命令"></a>下载kube-dns命令</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># wget https:<span class="comment">//dl.k8s.io/v1.5.2/kubernetes-server-linux-amd64.tar.gz</span></span></div><div class="line"><span class="meta"># tar -xf kubernetes-server-linux-amd64.tar.gz</span></div><div class="line"><span class="meta"># mv /opt/docker/src/kubernetes/server/bin/kube-dns /usr/bin/</span></div></pre></td></tr></table></figure>
<h3 id="新建kube-dns配置文件"><a href="#新建kube-dns配置文件" class="headerlink" title="新建kube-dns配置文件"></a>新建kube-dns配置文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># vi /etc/kubernetes/kube-dns</span></div><div class="line">KUBE_DNS_PORT=<span class="string">"--dns-port=53"</span></div><div class="line">KUBE_DNS_DOMAIN=<span class="string">"--domain=cluster.local"</span></div><div class="line">KUBE_DNS_MASTER=--kube-master-url=<span class="string">"http://192.168.40.50:8080"</span></div><div class="line">KUBE_DNS_ARGS=<span class="string">""</span></div></pre></td></tr></table></figure>
<h3 id="新建kube-dns-service配置文件"><a href="#新建kube-dns-service配置文件" class="headerlink" title="新建kube-dns.service配置文件"></a>新建kube-dns.service配置文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master calico]<span class="meta"># cat /usr/lib/systemd/system/kube-dns.service </span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kube-dns Server</div><div class="line">Documentation=https:<span class="comment">//github.com/GoogleCloudPlatform/kubernetes</span></div><div class="line">After=kube-apiserver.service</div><div class="line">Requires=kube-apiserver.service</div><div class="line"> </div><div class="line">[Service]</div><div class="line">WorkingDirectory=/var/lib/kube-dns</div><div class="line">EnvironmentFile=-/etc/kubernetes/kube-dns</div><div class="line">ExecStart=/usr/bin/kube-dns \</div><div class="line">            $KUBE_DNS_PORT \</div><div class="line">            $KUBE_DNS_DOMAIN \</div><div class="line">            $KUBE_DNS_MASTER \</div><div class="line">            $KUBE_DNS_ARGS</div><div class="line">Restart=on-failure</div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<h3 id="master启动"><a href="#master启动" class="headerlink" title="master启动"></a>master启动</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># mkdir -p /var/lib/kube-dns</span></div><div class="line"><span class="meta"># systemctl enable kube-dns</span></div><div class="line"><span class="meta"># systemctl restart kube-dns</span></div></pre></td></tr></table></figure>
<h3 id="master修改-etc-resolv-conf文件"><a href="#master修改-etc-resolv-conf文件" class="headerlink" title="master修改/etc/resolv.conf文件"></a>master修改/etc/resolv.conf文件</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master calico]<span class="meta"># cat /etc/resolv.conf</span></div><div class="line"># Generated by NetworkManager</div><div class="line">search <span class="keyword">default</span>.svc.cluster.local svc.cluster.local cluster.local</div><div class="line">nameserver <span class="number">10.200</span><span class="number">.102</span><span class="number">.95</span></div><div class="line">nameserver <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></div><div class="line">nameserver <span class="number">202.96</span><span class="number">.128</span><span class="number">.86</span></div></pre></td></tr></table></figure>
<h3 id="node结点修改kubelet文件"><a href="#node结点修改kubelet文件" class="headerlink" title="node结点修改kubelet文件"></a>node结点修改kubelet文件</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@k8s-node-1 ~]# cat /etc/kubernetes/kubelet </div><div class="line">###</div><div class="line"># kubernetes kubelet (minion) config</div><div class="line"></div><div class="line"># The address for the info server to serve on (set to 0.0.0.0 or "" for all interfaces)</div><div class="line">#KUBELET_ADDRESS="--address=127.0.0.1"</div><div class="line">KUBELET_ADDRESS="--address=0.0.0.0"</div><div class="line"># The port for the info server to serve on</div><div class="line"># KUBELET_PORT="--port=10250"</div><div class="line"># You may leave this blank to use the actual hostname</div><div class="line">#KUBELET_HOSTNAME="--hostname-override=127.0.0.1"</div><div class="line">KUBELET_HOSTNAME="--hostname-override=k8s-node-1"</div><div class="line"># location of the api-server</div><div class="line">#KUBELET_API_SERVER="--api-servers=http://127.0.0.1:8080"</div><div class="line">KUBELET_API_SERVER="--api-servers=http://10.200.102.95:8080"</div><div class="line"># pod infrastructure container</div><div class="line">#KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest"</div><div class="line">KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=192.168.204.66/google_containers/pause:latest"</div><div class="line"># Add your own!</div><div class="line">KUBELET_ARGS="--cluster-dns=10.200.102.95 --cluster-domain=cluster.local"</div></pre></td></tr></table></figure>
<h3 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube]<span class="meta"># kubectl exec -ti busybox --namespace=kube-system -- nslookup kubernetes.default</span></div><div class="line">Server:    <span class="number">10.200</span><span class="number">.102</span><span class="number">.95</span></div><div class="line">Address <span class="number">1</span>: <span class="number">10.200</span><span class="number">.102</span><span class="number">.95</span></div><div class="line"></div><div class="line">Name:      kubernetes.<span class="keyword">default</span></div><div class="line">Address <span class="number">1</span>: <span class="number">10.254</span><span class="number">.0</span><span class="number">.1</span> kubernetes.<span class="keyword">default</span>.svc.cluster.local</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;

&lt;h2 id=&quot;第一种方案-容器部署方案&quot;&gt;&lt;a href=&quot;#第一种方案-容器部署方案&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="容器化" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
      <category term="服务搭建" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Kubernetes" scheme="http://jeromeliu.win/tags/Kubernetes/"/>
    
      <category term="Docker" scheme="http://jeromeliu.win/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 搭建dashboard</title>
    <link href="http://jeromeliu.win/2017/04/21/Kubernetes-%E6%90%AD%E5%BB%BAdashboard/"/>
    <id>http://jeromeliu.win/2017/04/21/Kubernetes-搭建dashboard/</id>
    <published>2017-04-21T09:01:43.000Z</published>
    <updated>2017-04-24T02:14:44.672Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>
<h2 id="拉去官方的rc文件-Deployment"><a href="#拉去官方的rc文件-Deployment" class="headerlink" title="拉去官方的rc文件(Deployment)"></a>拉去官方的rc文件(Deployment)</h2><p>相关的拉取路径：<br>kubectl create -f <a href="https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml" target="_blank" rel="external">https://rawgit.com/kubernetes/dashboard/master/src/deploy/kubernetes-dashboard.yaml</a></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">kind: Deployment</div><div class="line">apiVersion: extensions/v1beta1</div><div class="line">metadata:</div><div class="line">  labels:</div><div class="line">    app: kubernetes-dashboard</div><div class="line">  name: kubernetes-dashboard</div><div class="line">  <span class="keyword">namespace</span>: kube-system</div><div class="line">spec:</div><div class="line">  replicas: <span class="number">1</span></div><div class="line">  selector:</div><div class="line">    matchLabels:</div><div class="line">      app: kubernetes-dashboard</div><div class="line">  <span class="keyword">template</span>:</div><div class="line">    metadata:</div><div class="line">      labels:</div><div class="line">        app: kubernetes-dashboard</div><div class="line">    spec:</div><div class="line">      containers:</div><div class="line">      - name: kubernetes-dashboard</div><div class="line">        image: index.tenxcloud.com/google_containers/kubernetes-dashboard-amd64:v1<span class="number">.4</span><span class="number">.1</span></div><div class="line">        imagePullPolicy: IfNotPresent</div><div class="line">        ports:</div><div class="line">        - containerPort: <span class="number">9090</span></div><div class="line">          protocol: TCP</div><div class="line">        args:</div><div class="line">          # Uncomment the following line to manually specify Kubernetes API server Host</div><div class="line">          # If not specified, Dashboard will attempt to <span class="keyword">auto</span> discover the API server and connect</div><div class="line">          <span class="meta"># to it. Uncomment only <span class="meta-keyword">if</span> the default does not work.</span></div><div class="line">          - --apiserver-host=https:<span class="comment">//10.200.102.93:6443</span></div><div class="line">          - --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml</div><div class="line">        livenessProbe:</div><div class="line">          httpGet:</div><div class="line">            path: /</div><div class="line">            port: <span class="number">9090</span></div><div class="line">          initialDelaySeconds: <span class="number">30</span></div><div class="line">          timeoutSeconds: <span class="number">30</span></div><div class="line">        volumeMounts:</div><div class="line">        - mountPath: /etc/kubernetes/ssl</div><div class="line">          name: ssl-certs-kubernetes</div><div class="line">        - mountPath: /etc/ssl/certs</div><div class="line">          name: ssl-certs-host</div><div class="line">        - mountPath: /etc/kubernetes/worker-kubeconfig.yaml</div><div class="line">          name: config</div><div class="line">      volumes:</div><div class="line">      - hostPath:</div><div class="line">          path: /etc/kubernetes/ssl</div><div class="line">        name: ssl-certs-kubernetes</div><div class="line">      - hostPath:</div><div class="line">          path: /etc/pki/tls/certs</div><div class="line">        name: ssl-certs-host</div><div class="line">      - hostPath:</div><div class="line">          path: /etc/kubernetes/worker-kubeconfig.yaml</div><div class="line">        name: config</div></pre></td></tr></table></figure>
<p>对应的Service文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">kind: Service</div><div class="line">apiVersion: v1</div><div class="line">metadata:</div><div class="line">  labels:</div><div class="line">    app: kubernetes-dashboard</div><div class="line">  name: kubernetes-dashboard</div><div class="line">  <span class="keyword">namespace</span>: kube-system</div><div class="line">spec:</div><div class="line">  type: NodePort</div><div class="line">  ports:</div><div class="line">  - port: <span class="number">80</span></div><div class="line">    nodePort: <span class="number">30010</span></div><div class="line">    targetPort: <span class="number">9090</span></div><div class="line">  selector:</div><div class="line">    app: kubernetes-dashboard</div></pre></td></tr></table></figure></p>
<h2 id="执行rc文件"><a href="#执行rc文件" class="headerlink" title="执行rc文件"></a>执行rc文件</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">kubectl create -f kubernetes-dashboard.yaml</div></pre></td></tr></table></figure>
<h2 id="查看pod状态"><a href="#查看pod状态" class="headerlink" title="查看pod状态"></a>查看pod状态</h2><p><img src="/uploads/Kubernetes 搭建dashboard/pod-status.png" alt="pod-status"><br><img src="/uploads/Kubernetes 搭建dashboard/pod-desc.png" alt="pod-desc"><br><img src="/uploads/Kubernetes 搭建dashboard/pod-servcie.png" alt="pod-servcie"></p>
<p>访问地址：nodeIP：NodePort</p>
<h2 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h2><p><img src="/uploads/Kubernetes 搭建dashboard/userinface.png" alt="userinface"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;拉去官方的rc文件-Deployment&quot;&gt;&lt;a href=&quot;#拉去官方的rc文件-Deploym
    
    </summary>
    
      <category term="容器化" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
      <category term="服务搭建" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Kubernetes" scheme="http://jeromeliu.win/tags/Kubernetes/"/>
    
      <category term="Docker" scheme="http://jeromeliu.win/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes 双向证书TLS配置</title>
    <link href="http://jeromeliu.win/2017/04/21/Kubernetes-%E5%8F%8C%E5%90%91%E8%AF%81%E4%B9%A6TLS%E9%85%8D%E7%BD%AE/"/>
    <id>http://jeromeliu.win/2017/04/21/Kubernetes-双向证书TLS配置/</id>
    <published>2017-04-21T08:41:35.000Z</published>
    <updated>2017-04-21T09:00:30.713Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>
<h2 id="签发证书"><a href="#签发证书" class="headerlink" title="签发证书"></a>签发证书</h2><p>TLS双向认知需要预先自建CA签发证书，权威CA机构的证书应该不可用，因为大部分k8s都是在内网中部署，而内网应该都会采用私有IP地址通讯，权威CA好像只能签署域名证书，对签署到IP可能无法实现.</p>
<h3 id="自签CA"><a href="#自签CA" class="headerlink" title="自签CA"></a>自签CA</h3><p>对于私有证书签发首先要自签署一个CA根证书<br>创建证书存放的目录,创建CA私钥,自签CA<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@master ~]<span class="meta"># mkdir /etc/kubernetes/ssl &amp;&amp; cd /etc/kubernetes/ssl</span></div><div class="line">openssl genrsa -out ca-key.pem <span class="number">2048</span></div><div class="line">[root@master ssl]<span class="meta"># openssl req -x509 -new -nodes -key ca-key.pem -days 10000 -out ca.pem -subj <span class="meta-string">"/CN=kube-ca"</span></span></div><div class="line">[root@master ssl]<span class="meta"># ls</span></div><div class="line">ca-key.pem  ca.pem</div></pre></td></tr></table></figure></p>
<h3 id="签署apiserver-证书"><a href="#签署apiserver-证书" class="headerlink" title="签署apiserver 证书"></a>签署apiserver 证书</h3><p>自签 CA 后就需要使用这个根 CA 签署 apiserver 相关的证书了，首先先修改 openssl 的配置。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># vim openssl.cnf</span></div><div class="line">[req]</div><div class="line">req_extensions = v3_req</div><div class="line">distinguished_name = req_distinguished_name</div><div class="line">[req_distinguished_name]</div><div class="line">[ v3_req ]</div><div class="line">basicConstraints = CA:FALSE</div><div class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</div><div class="line">subjectAltName = @alt_names</div><div class="line">[alt_names]</div><div class="line">DNS<span class="number">.1</span> = kubernetes</div><div class="line">DNS<span class="number">.2</span> = kubernetes.<span class="keyword">default</span></div><div class="line">DNS<span class="number">.3</span> = kubernetes.<span class="keyword">default</span>.svc</div><div class="line">DNS<span class="number">.4</span> = kubernetes.<span class="keyword">default</span>.svc.cluster.local</div><div class="line">IP<span class="number">.1</span> = <span class="number">10.254</span><span class="number">.0</span><span class="number">.1</span>   #k8s 集群service ip(dns),关键地方</div><div class="line">IP<span class="number">.2</span> = <span class="number">10.200</span><span class="number">.102</span><span class="number">.93</span>  #k8s master ip</div></pre></td></tr></table></figure></p>
<p>然后开始签署apiserver相关的证书<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 生成 apiserver 私钥</div><div class="line">openssl genrsa -out apiserver-key.pem <span class="number">2048</span></div><div class="line"># 生成签署请求</div><div class="line">openssl req -<span class="keyword">new</span> -key apiserver-key.pem -out apiserver.csr -subj <span class="string">"/CN=kube-apiserver"</span> -config openssl.cnf</div><div class="line"># 使用自建 CA 签署</div><div class="line">openssl x509 -req -in apiserver.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out apiserver.pem -days <span class="number">365</span> -extensions v3_req -extfile openssl.cnf</div></pre></td></tr></table></figure></p>
<h3 id="生成集群管理证书"><a href="#生成集群管理证书" class="headerlink" title="生成集群管理证书"></a>生成集群管理证书</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">openssl genrsa -out admin-key.pem <span class="number">2048</span></div><div class="line">openssl req -<span class="keyword">new</span> -key admin-key.pem -out admin.csr -subj <span class="string">"/CN=kube-admin"</span></div><div class="line">openssl x509 -req -in admin.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out admin.pem -days <span class="number">365</span></div></pre></td></tr></table></figure>
<h3 id="签署node证书"><a href="#签署node证书" class="headerlink" title="签署node证书"></a>签署node证书</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@master ssl]<span class="meta">#  cp openssl.cnf worker-openssl.cnf</span></div><div class="line">[root@master ssl]<span class="meta"># cat worker-openssl.cnf </span></div><div class="line">[req]</div><div class="line">req_extensions = v3_req</div><div class="line">distinguished_name = req_distinguished_name</div><div class="line">[req_distinguished_name]</div><div class="line">[ v3_req ]</div><div class="line">basicConstraints = CA:FALSE</div><div class="line">keyUsage = nonRepudiation, digitalSignature, keyEncipherment</div><div class="line">subjectAltName = @alt_names</div><div class="line">[alt_names]</div><div class="line">IP<span class="number">.1</span> = <span class="number">10.200</span><span class="number">.102</span><span class="number">.92</span></div><div class="line">IP<span class="number">.2</span> = <span class="number">10.200</span><span class="number">.102</span><span class="number">.81</span></div><div class="line">IP<span class="number">.3</span> = <span class="number">10.200</span><span class="number">.102</span><span class="number">.82</span></div></pre></td></tr></table></figure>
<p>生成各个结点的证书并且拷贝到每个节点的目录下<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@master ssl]<span class="meta"># for i in &#123;k8s-master,k8s-node-1,k8s-node-2,k8s-node-3&#125;</span></div><div class="line">&gt; <span class="keyword">do</span></div><div class="line">&gt; openssl  genrsa -out $i-worker-key.pem <span class="number">2048</span></div><div class="line">&gt; openssl req -<span class="keyword">new</span> -key $i-worker-key.pem -out $i-worker.csr -subj <span class="string">"/CN=$i"</span> -config worker-openssl.cnf</div><div class="line">&gt; openssl x509 -req -in $i-worker.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out $i-worker.pem -days <span class="number">365</span> -extensions v3_req -extfile worker-openssl.cnf</div><div class="line">&gt; ssh root@$i <span class="string">"mkdir /etc/kubernetes/ssl;chown kube:kube -R /etc/kubernetes/ssl"</span></div><div class="line">&gt; scp /etc/kubernetes/ssl/ca.pem /etc/kubernetes/ssl/$i* root@$i:/etc/kubernetes/ssl</div><div class="line">&gt; done</div></pre></td></tr></table></figure></p>
<h2 id="配置k8s"><a href="#配置k8s" class="headerlink" title="配置k8s"></a>配置k8s</h2><h3 id="配置master"><a href="#配置master" class="headerlink" title="配置master"></a>配置master</h3><p>apiserver文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">KUBE_API_ADDRESS=<span class="string">"--bind-address=10.200.102.93 --insecure-bind-address=127.0.0.1 "</span></div><div class="line"></div><div class="line"># The port on the local server to listen on.</div><div class="line">KUBE_API_PORT==<span class="string">"--secure-port=6443 --insecure-port=8080"</span></div><div class="line"></div><div class="line"># Port minions listen on</div><div class="line"># KUBELET_PORT=<span class="string">"--kubelet-port=10250"</span></div><div class="line"># Comma separated <span class="built_in">list</span> of nodes in the etcd cluster</div><div class="line">KUBE_ETCD_SERVERS=<span class="string">"--etcd-servers=http://10.200.102.93:2379"</span></div><div class="line"></div><div class="line"># Address range to use <span class="keyword">for</span> services</div><div class="line">KUBE_SERVICE_ADDRESSES=<span class="string">"--service-cluster-ip-range=10.254.0.0/16"</span></div><div class="line"></div><div class="line"># <span class="keyword">default</span> admission control policies</div><div class="line">KUBE_ADMISSION_CONTROL=<span class="string">"--admission-control=NamespaceLifecycle,NamespaceExists,LimitRanger,SecurityContextDeny,ServiceAccount,ResourceQuota"</span></div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBE_API_ARGS=<span class="string">"--tls-cert-file=/etc/kubernetes/ssl/apiserver.pem \</span></div><div class="line">               --tls-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem \</div><div class="line">               --client-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">               --service-account-key-file=/etc/kubernetes/ssl/apiserver-key.pem"</div></pre></td></tr></table></figure></p>
<p>config文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">###</div><div class="line"><span class="meta"># kubernetes system config</span></div><div class="line">#</div><div class="line"># The following values are used to configure various aspects of all</div><div class="line"><span class="meta"># kubernetes services, including</span></div><div class="line">#</div><div class="line"><span class="meta">#   kube-apiserver.service</span></div><div class="line"><span class="meta">#   kube-controller-manager.service</span></div><div class="line"><span class="meta">#   kube-scheduler.service</span></div><div class="line"><span class="meta">#   kubelet.service</span></div><div class="line"><span class="meta">#   kube-proxy.service</span></div><div class="line"><span class="meta"># logging to stderr means we get it in the systemd journal</span></div><div class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></div><div class="line"></div><div class="line"># journal message level, <span class="number">0</span> is debug</div><div class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></div><div class="line"></div><div class="line"># Should <span class="keyword">this</span> cluster be allowed to run privileged docker containers</div><div class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></div><div class="line"></div><div class="line"># How the controller-manager, scheduler, and proxy find the apiserver</div><div class="line">#KUBE_MASTER=<span class="string">"--master=http://k8s-master:8080"</span></div><div class="line">KUBE_MASTER=<span class="string">"--master=https://k8s-master:6443"</span></div></pre></td></tr></table></figure></p>
<p>scheduler文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># cat /etc/kubernetes/scheduler </span></div><div class="line">###</div><div class="line"><span class="meta"># kubernetes scheduler config</span></div><div class="line"></div><div class="line"><span class="meta"># default config should be adequate</span></div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBE_SCHEDULER_ARGS=<span class="string">"--kubeconfig=/etc/kubernetes/cm-kubeconfig.yaml --master=http://127.0.0.1:8080"</span></div></pre></td></tr></table></figure></p>
<p>controller-manager文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># cat /etc/kubernetes/controller-manager </span></div><div class="line">###</div><div class="line"># The following values are used to configure the kubernetes controller-manager</div><div class="line"><span class="meta"># defaults from config and apiserver should be adequate</span></div><div class="line"># Add your own!</div><div class="line">KUBE_CONTROLLER_MANAGER_ARGS=<span class="string">"--service-account-private-key-file=/etc/kubernetes/ssl/apiserver-key.pem \</span></div><div class="line">                              --root-ca-file=/etc/kubernetes/ssl/ca.pem \</div><div class="line">                              --master=http://127.0.0.1:8080 \</div><div class="line">                              --kubeconfig=/etc/kubernetes/cm-kubeconfig.yaml"</div></pre></td></tr></table></figure></p>
<p>创建一个/etc/kubernetes/cm-kubeconfig.yaml 文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">apiVersion: v1</div><div class="line">kind: Config</div><div class="line">clusters:</div><div class="line">- name: local</div><div class="line">  cluster:</div><div class="line">    certificate-authority: /etc/kubernetes/ssl/ca.pem</div><div class="line">users:</div><div class="line">- name: controllermanager</div><div class="line">  user:</div><div class="line">    client-certificate: /etc/kubernetes/ssl/apiserver.pem</div><div class="line">    client-key: /etc/kubernetes/ssl/apiserver-key.pem</div><div class="line">contexts:</div><div class="line">- context:</div><div class="line">    cluster: local</div><div class="line">    user: controllermanager</div><div class="line">  name: kubelet-context</div><div class="line">current-context: kubelet-context</div></pre></td></tr></table></figure></p>
<p>重启服务<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl  restart  etcd kube-apiserver.service kube-controller-manager.service kube-scheduler.service</div></pre></td></tr></table></figure></p>
<h2 id="配置node结点（以node1为例子）"><a href="#配置node结点（以node1为例子）" class="headerlink" title="配置node结点（以node1为例子）"></a>配置node结点（以node1为例子）</h2><p>config文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">[root@k8s-node<span class="number">-1</span> ~]<span class="meta"># cat /etc/kubernetes/config </span></div><div class="line">###</div><div class="line"><span class="meta"># kubernetes system config</span></div><div class="line">#</div><div class="line"># The following values are used to configure various aspects of all</div><div class="line"><span class="meta"># kubernetes services, including</span></div><div class="line">#</div><div class="line"><span class="meta">#   kube-apiserver.service</span></div><div class="line"><span class="meta">#   kube-controller-manager.service</span></div><div class="line"><span class="meta">#   kube-scheduler.service</span></div><div class="line"><span class="meta">#   kubelet.service</span></div><div class="line"><span class="meta">#   kube-proxy.service</span></div><div class="line"><span class="meta"># logging to stderr means we get it in the systemd journal</span></div><div class="line">KUBE_LOGTOSTDERR=<span class="string">"--logtostderr=true"</span></div><div class="line"></div><div class="line"># journal message level, <span class="number">0</span> is debug</div><div class="line">KUBE_LOG_LEVEL=<span class="string">"--v=0"</span></div><div class="line"></div><div class="line"># Should <span class="keyword">this</span> cluster be allowed to run privileged docker containers</div><div class="line">KUBE_ALLOW_PRIV=<span class="string">"--allow-privileged=false"</span></div><div class="line"></div><div class="line"># How the controller-manager, scheduler, and proxy find the apiserver</div><div class="line">#KUBE_MASTER=<span class="string">"--master=http://127.0.0.1:8080"</span></div><div class="line">KUBE_MASTER=<span class="string">"--master=https://10.200.102.93:6443"</span></div></pre></td></tr></table></figure></p>
<p>kubelet文件<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@k8s-node-1 ~]# cat /etc/kubernetes/kubelet</div><div class="line">###</div><div class="line"># kubernetes kubelet (minion) config</div><div class="line"># The address for the info server to serve on (set to 0.0.0.0 or "" for all interfaces)</div><div class="line">#KUBELET_ADDRESS="--address=0.0.0.0"</div><div class="line">KUBELET_ADDRESS="--address=10.200.102.92"</div><div class="line"></div><div class="line"># The port for the info server to serve on</div><div class="line">KUBELET_PORT="--port=10250"</div><div class="line"></div><div class="line"># You may leave this blank to use the actual hostname</div><div class="line">KUBELET_HOSTNAME="--hostname-override=k8s-node-1"</div><div class="line"></div><div class="line"># location of the api-server</div><div class="line">#KUBELET_API_SERVER="--api-servers=http://k8s-master:8080"</div><div class="line">KUBELET_API_SERVER="--api-servers=https://10.200.102.93:6443"</div><div class="line"></div><div class="line"># pod infrastructure container</div><div class="line">#KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=registry.access.redhat.com/rhel7/pod-infrastructure:latest"</div><div class="line">KUBELET_POD_INFRA_CONTAINER="--pod-infra-container-image=192.168.204.66/google_containers/pause:latest"</div><div class="line"></div><div class="line"># Add your own!</div><div class="line">KUBELET_ARGS="--cluster_dns=172.30.0.3 \</div><div class="line">              --cluster_domain=cluster.local \</div><div class="line">              --tls-cert-file=/etc/kubernetes/ssl/k8s-node-1-worker.pem \</div><div class="line">              --tls-private-key-file=/etc/kubernetes/ssl/k8s-node-1-worker-key.pem \</div><div class="line">              --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml \</div><div class="line">              --allow-privileged=true "</div></pre></td></tr></table></figure></p>
<p>proxy文件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[root@k8s-node<span class="number">-1</span> ~]<span class="meta"># cat /etc/kubernetes/proxy </span></div><div class="line">###</div><div class="line"><span class="meta"># kubernetes proxy config</span></div><div class="line"><span class="meta"># default config should be adequate</span></div><div class="line"># Add your own!</div><div class="line">KUBE_PROXY_ARGS=<span class="string">"--proxy-mode=iptables \</span></div><div class="line">                 --master=https://10.200.102.93:6443 \</div><div class="line">                 --kubeconfig=/etc/kubernetes/worker-kubeconfig.yaml"</div></pre></td></tr></table></figure></p>
<p>创建一个文件worker-kubeconfig.yaml<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">apiVersion: v1</div><div class="line">kind: Config</div><div class="line">clusters:</div><div class="line">- name: local</div><div class="line">  cluster:</div><div class="line">    server: https:<span class="comment">//10.200.102.93:6443</span></div><div class="line">    certificate-authority: /etc/kubernetes/ssl/ca.pem</div><div class="line">users:</div><div class="line">- name: kubelet</div><div class="line">  user:</div><div class="line">    client-certificate: /etc/kubernetes/ssl/node1-worker.pem</div><div class="line">    client-key: /etc/kubernetes/ssl/node1-worker-key.pem</div><div class="line">contexts:</div><div class="line">- context:</div><div class="line">    cluster: local</div><div class="line">    user: kubelet</div><div class="line">  name: kubelet-context</div><div class="line">current-context: kubelet-context</div></pre></td></tr></table></figure></p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">node1</div><div class="line">#重启服务</div><div class="line">systemctl  restart kubelet kube-proxy</div><div class="line"></div><div class="line">#查看 状态</div><div class="line">systemctl  status  kubelet kube-proxy  -l</div></pre></td></tr></table></figure>
<h2 id="验证TLS"><a href="#验证TLS" class="headerlink" title="验证TLS"></a>验证TLS</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#验证证书</div><div class="line">curl https:<span class="comment">//10.200.102.93:6443/api/v1/nodes --cert /etc/kubernetes/ssl/k8s-node-1-worker.pem --key /etc/kubernetes/ssl/k8s-node-1-worker-key.pem --cacert /etc/kubernetes/ssl/ca.pem</span></div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;签发证书&quot;&gt;&lt;a href=&quot;#签发证书&quot; class=&quot;headerlink&quot; title=&quot;签
    
    </summary>
    
      <category term="容器化" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
      <category term="服务搭建" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Kubernetes" scheme="http://jeromeliu.win/tags/Kubernetes/"/>
    
      <category term="Docker" scheme="http://jeromeliu.win/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Kubernetes环境搭建</title>
    <link href="http://jeromeliu.win/2017/04/20/Kubernetes%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://jeromeliu.win/2017/04/20/Kubernetes环境搭建/</id>
    <published>2017-04-20T02:53:15.000Z</published>
    <updated>2017-04-21T09:25:01.318Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote></p>
<h2 id="第一种安装方案-官网"><a href="#第一种安装方案-官网" class="headerlink" title="第一种安装方案(官网)"></a>第一种安装方案(官网)</h2><p>基于官方的安装方式(<code style="color:red">安装包并非是最新版本的</code>)</p>
<h3 id="准备CentOS-7-x环境"><a href="#准备CentOS-7-x环境" class="headerlink" title="准备CentOS 7.x环境"></a>准备CentOS 7.x环境</h3><p>查看内核版本<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># uname -r</span></div><div class="line"><span class="number">3.10</span><span class="number">.0</span><span class="number">-514.6</span><span class="number">.1</span>.el7.x86_64</div><div class="line">[root@k8s-master kube-yaml]# </div></pre></td></tr></table></figure></p>
<p>最好是选择<code style="color:red">3.10</code>版本以上的内核，进行安装。<br>本次安装，选择了4台服务器进行集群安装。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># cat /etc/hosts</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.93</span> k8s-master</div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.92</span> k8s-node<span class="number">-1</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.81</span> k8s-node<span class="number">-2</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.82</span> k8s-node<span class="number">-3</span></div><div class="line">[root@k8s-master kube-yaml]# </div></pre></td></tr></table></figure>
<p>配置官方<a href="https://kubernetes.io/docs/getting-started-guides/centos/centos_manual_config/" target="_blank" rel="external">k8s yum源</a>:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[virt7-docker-common-release]</div><div class="line">name=virt7-docker-common-release</div><div class="line">baseurl=http:<span class="comment">//cbs.centos.org/repos/virt7-docker-common-release/x86_64/os/</span></div><div class="line">gpgcheck=<span class="number">0</span></div></pre></td></tr></table></figure></p>
<p>配置<a href="http://mirrors.aliyun.com/repo/Centos-7.repo" target="_blank" rel="external">阿里云yum源</a>:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">[base]</div><div class="line">name=CentOS-$releasever - Base - mirrors.aliyun.com</div><div class="line">failovermethod=priority</div><div class="line">baseurl=http:<span class="comment">//mirrors.aliyun.com/centos/$releasever/os/$basearch/</span></div><div class="line">        http:<span class="comment">//mirrors.aliyuncs.com/centos/$releasever/os/$basearch/</span></div><div class="line">#mirrorlist=http:<span class="comment">//mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=os</span></div><div class="line">gpgcheck=<span class="number">1</span></div><div class="line">gpgkey=http:<span class="comment">//mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></div><div class="line"></div><div class="line">#released updates</div><div class="line">[updates]</div><div class="line">name=CentOS-$releasever - Updates - mirrors.aliyun.com</div><div class="line">failovermethod=priority</div><div class="line">baseurl=http:<span class="comment">//mirrors.aliyun.com/centos/$releasever/updates/$basearch/        http://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/</span></div><div class="line">#mirrorlist=http:<span class="comment">//mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=updates</span></div><div class="line">gpgcheck=<span class="number">1</span></div><div class="line">gpgkey=http:<span class="comment">//mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></div><div class="line">#additional packages that may be useful</div><div class="line">[extras]</div><div class="line">name=CentOS-$releasever - Extras - mirrors.aliyun.com</div><div class="line">failovermethod=priority</div><div class="line">baseurl=http:<span class="comment">//mirrors.aliyun.com/centos/$releasever/extras/$basearch/</span></div><div class="line">http:<span class="comment">//mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/</span></div><div class="line">#mirrorlist=http:<span class="comment">//mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=extras</span></div><div class="line">gpgcheck=<span class="number">1</span></div><div class="line">gpgkey=http:<span class="comment">//mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></div><div class="line">#additional packages that extend functionality of existing packages</div><div class="line">[centosplus]</div><div class="line">name=CentOS-$releasever - Plus - mirrors.aliyun.com</div><div class="line">failovermethod=priority</div><div class="line">baseurl=http:<span class="comment">//mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/    http://mirrors.aliyuncs.com/centos/$releasever/centosplus/$basearch/</span></div><div class="line">#mirrorlist=http:<span class="comment">//mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=centosplus</span></div><div class="line">gpgcheck=<span class="number">1</span></div><div class="line">enabled=<span class="number">0</span></div><div class="line">gpgkey=http:<span class="comment">//mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></div><div class="line">#contrib - packages by Centos Users</div><div class="line">[contrib]</div><div class="line">name=CentOS-$releasever - Contrib - mirrors.aliyun.com</div><div class="line">failovermethod=priority</div><div class="line">baseurl=http:<span class="comment">//mirrors.aliyun.com/centos/$releasever/contrib/$basearch/</span></div><div class="line">http:<span class="comment">//mirrors.aliyuncs.com/centos/$releasever/contrib/$basearch/</span></div><div class="line">#mirrorlist=http:<span class="comment">//mirrorlist.centos.org/?release=$releasever&amp;arch=$basearch&amp;repo=contrib</span></div><div class="line">gpgcheck=<span class="number">1</span></div><div class="line">enabled=<span class="number">0</span></div><div class="line">gpgkey=http:<span class="comment">//mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7</span></div></pre></td></tr></table></figure></p>
<p>更新本地镜像源<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">yum clean all</div><div class="line">yum makecache</div></pre></td></tr></table></figure></p>
<h3 id="安装Kubernetes环境-Master"><a href="#安装Kubernetes环境-Master" class="headerlink" title="安装Kubernetes环境(Master)"></a>安装Kubernetes环境(Master)</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install --enablerepo=virt7-docker-common-release kubernetes etcd flannel</div></pre></td></tr></table></figure><img src="/uploads/Kubernetes环境搭建/Kubernates环境安装.png" alt="Kubernates环境安装"><br><br>安装的过程有点久，因为需要下载和安装。期间如果出现什么下载失败，更新包更新失败。基本上都是因为yum的问题，换个国内大企业的镜像yum就好了。<br><img src="/uploads/Kubernetes环境搭建/Kubernates搭建结果.png" alt="Kubernates搭建结果"><br>至此，整个下载和安装的过程就算成功了。<br><br>编辑本地host文件，做好访问映射：<code style="color:red">vim /etc/hosts</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># cat /etc/hosts</span></div><div class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4</div><div class="line">::<span class="number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6</div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.93</span> k8s-master</div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.92</span> k8s-node<span class="number">-1</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.81</span> k8s-node<span class="number">-2</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.82</span> k8s-node<span class="number">-3</span></div></pre></td></tr></table></figure><img src="/uploads/Kubernetes环境搭建/hosts配置.png" alt="Hosts配置"><br><br>编辑k8s的配置文件信息：<code style="color:red">vi /etc/kubernetes/config</code><br><img src="/uploads/Kubernetes环境搭建/k8s-config.png" alt="k8s-config"><br><br>由于<code style="color:red">CentOS 7.x</code>默认是开启防火墙的，需要进行防火墙的设置操作：<br>关闭SELinux：<code style="color:red">setenforce 0</code><br>1、临时关闭(不用重启机器):<br><blockquote><br>setenforce 0       #设置SELinux 成为permissive模式<br>setenforce 1       #设置SELinux 成为enforcing模式<br></blockquote><img src="/uploads/Kubernetes环境搭建/setlinux.png" alt="setLinux"><br>2、关闭防火墙:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl stop firewalld.service</div><div class="line">systemctl disable firewalld.service</div></pre></td></tr></table></figure>
<p>编辑etcd的配置文件信息：<code style="color:red">vi /etc/etcd/etcd.conf</code><br><img src="/uploads/Kubernetes环境搭建/ectd.png" alt="etcd"></p>
<p>编辑k8s的配置信息：<code style="color:red">vi /etc/kubernetes/apiserver</code><br><img src="/uploads/Kubernetes环境搭建/apiserver.png" alt="apiserver"></p>
<p>启动etcd服务：<code style="color:red">systemctl start etcd</code><br><img src="/uploads/Kubernetes环境搭建/start-etcd.png" alt="start-etcd"></p>
<p>创建网络，并且设置网络配置信息：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">etcdctl mkdir /kube-centos/network</div><div class="line">etcdctl mk /kube-centos/network/config </div><div class="line"><span class="string">"&#123;\"Network\":\"172.30.0.0/16\",\"SubnetLen\":24,\"Backend\":&#123;\"Type\":\"vxlan\"&#125;&#125;"</span></div></pre></td></tr></table></figure><img src="/uploads/Kubernetes环境搭建/etcd-network.png" alt="etcd-network"></p>
<p>配置flanneld信息：<code style="color:red">vi /etc/sysconfig/flanneld</code><br><img src="/uploads/Kubernetes环境搭建/flanneld.png" alt="flanneld"></p>
<p>运行环境：<code style="color:red">for SERVICES in etcd kube-apiserver kube-controller-manager kube-scheduler flanneld; do systemctl restart $SERVICES; systemctl enable $SERVICES; systemctl status $SERVICES; done</code><br><img src="/uploads/Kubernetes环境搭建/k8s-start.png" alt="k8s-start"><img src="/uploads/Kubernetes环境搭建/k8s-ready.png" alt="k8s-ready"></p>
<p>至此k8s-master的安装和启动到此完成。</p>
<h3 id="安装Kubernetes环境-Minion-Node"><a href="#安装Kubernetes环境-Minion-Node" class="headerlink" title="安装Kubernetes环境(Minion/Node):"></a>安装Kubernetes环境(Minion/Node):</h3><p>内核版本和yum源配置，请参考上面部分进行配置就可以了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install --enablerepo=virt7-docker-common-release kubernetes flannel</div></pre></td></tr></table></figure><img src="/uploads/Kubernetes环境搭建/Kubernates环境安装.png" alt="Kubernates环境安装"></p>
<p>安装的过程有点久，因为需要下载和安装。期间如果出现什么下载失败，更新包更新失败。基本上都是因为yum的问题，换个国内大企业的镜像yum就好了。<br><img src="/uploads/Kubernetes环境搭建/Kubernates搭建结果.png" alt="Kubernates搭建结果"><br>至此，整个下载和安装的过程就算成功了。</p>
<p>编辑本地host文件，做好访问映射：<code style="color:red">vim /etc/hosts</code><br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@k8s-master kube-yaml]<span class="meta"># cat /etc/hosts</span></div><div class="line"><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>   localhost localhost.localdomain localhost4 localhost4.localdomain4</div><div class="line">::<span class="number">1</span>         localhost localhost.localdomain localhost6 localhost6.localdomain6</div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.93</span> k8s-master</div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.92</span> k8s-node<span class="number">-1</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.81</span> k8s-node<span class="number">-2</span></div><div class="line"><span class="number">10.200</span><span class="number">.102</span><span class="number">.82</span> k8s-node<span class="number">-3</span></div></pre></td></tr></table></figure><img src="/uploads/Kubernetes环境搭建/hosts配置.png" alt="Hosts配置"></p>
<p>由于<code style="color:red">CentOS 7.x</code>默认是开启防火墙的，需要进行防火墙的设置操作：<br>关闭SELinux：<code style="color:red">setenforce 0</code><br>1、临时关闭(不用重启机器):</p>
<p><blockquote><br>setenforce 0       #设置SELinux 成为permissive模式<br>setenforce 1       #设置SELinux 成为enforcing模式<br></blockquote><img src="/uploads/Kubernetes环境搭建/setlinux.png" alt="setLinux"><br>2、关闭防火墙:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl stop firewalld.service</div><div class="line">systemctl disable firewalld.service</div></pre></td></tr></table></figure></p>
<p>编辑k8s的配置文件信息：<code style="color:red">vi /etc/kubernetes/config</code><br><img src="/uploads/Kubernetes环境搭建/k8s-config.png" alt="k8s-config"></p>
<p>配置kubernetes信息：<code style="color:red">vi /etc/kubernetes/kubelet</code><br><img src="/uploads/Kubernetes环境搭建/kubectl.png" alt="kubectl"></p>
<p>配置flanneld信息：<code style="color:red">vi /etc/sysconfig/flanneld</code><br><img src="/uploads/Kubernetes环境搭建/flanneld.png" alt="flanneld"></p>
<p>运行环境：<code style="color:red">for SERVICES in kube-proxy kubelet flanneld docker; do systemctl restart $SERVICES; systemctl enable $SERVICES; systemctl status $SERVICES; done</code><img src="/uploads/Kubernetes环境搭建/k8s-node.png" alt="k8s-node"></p>
<p>配置参数：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">kubectl config <span class="built_in">set</span>-cluster <span class="keyword">default</span>-cluster --server=http:<span class="comment">//k8s-master:8080</span></div><div class="line">kubectl config <span class="built_in">set</span>-context <span class="keyword">default</span>-context --cluster=<span class="keyword">default</span>-cluster --user=<span class="keyword">default</span>-admin</div><div class="line">kubectl config use-context <span class="keyword">default</span>-context</div></pre></td></tr></table></figure><img src="/uploads/Kubernetes环境搭建/kubectl-config.png" alt="kubectl-config"></p>
<h2 id="第二种安装方案-tar安装"><a href="#第二种安装方案-tar安装" class="headerlink" title="第二种安装方案(tar安装)"></a>第二种安装方案(tar安装)</h2><p>服务器环境：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="number">10.15</span><span class="number">.206</span><span class="number">.120</span> vip </div><div class="line"><span class="number">10.15</span><span class="number">.206</span><span class="number">.105</span> master </div><div class="line"><span class="number">10.15</span><span class="number">.206</span><span class="number">.106</span> node </div><div class="line"></div><div class="line"><span class="number">10.15</span><span class="number">.206</span><span class="number">.107</span> etcd1 node </div><div class="line"><span class="number">10.15</span><span class="number">.206</span><span class="number">.108</span> etcd2 node </div><div class="line"><span class="number">10.15</span><span class="number">.206</span><span class="number">.109</span> etcd3</div></pre></td></tr></table></figure></p>
<h3 id="第一步：配置flannel网卡-先在etcd中注册flannel子网："><a href="#第一步：配置flannel网卡-先在etcd中注册flannel子网：" class="headerlink" title="第一步：配置flannel网卡,先在etcd中注册flannel子网："></a>第一步：配置flannel网卡,先在etcd中注册flannel子网：</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">etcdctl set /coreos.com/network/config '&#123;"network": "172.16.0.0/16"&#125;'</div></pre></td></tr></table></figure>
<h3 id="第二步：在所有节点安装flannel"><a href="#第二步：在所有节点安装flannel" class="headerlink" title="第二步：在所有节点安装flannel"></a>第二步：在所有节点安装flannel</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install -y flannel</div></pre></td></tr></table></figure>
<h3 id="第三步：修改flannel配置文件-etc-sysconfig-flanneld"><a href="#第三步：修改flannel配置文件-etc-sysconfig-flanneld" class="headerlink" title="第三步：修改flannel配置文件/etc/sysconfig/flanneld"></a>第三步：修改flannel配置文件/etc/sysconfig/flanneld</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">FLANNEL_ETCD=<span class="string">"http://10.15.206.107:2379,http://10.15.206.108:2379,http://10.15.206.109:2379"</span> </div><div class="line">FLANNEL_ETCD_KEY=<span class="string">"/coreos.com/network"</span></div></pre></td></tr></table></figure>
<p>重启flannel：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">systemctl start flanneld </div><div class="line">systemctl enable flanneld</div></pre></td></tr></table></figure></p>
<p>需要说明的是，如果要让docker使用flannel的网络，docker必须要后于flannel启动，所以需要重新启动docker<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart docker</div></pre></td></tr></table></figure></p>
<h3 id="第四步：下载地址"><a href="#第四步：下载地址" class="headerlink" title="第四步：下载地址"></a>第四步：下载地址</h3><p>kubernetes-client地址<br><a href="https://storage.googleapis.com/kubernetes-release/release/v1.5.3/kubernetes-client-linux-amd64.tar.gz" target="_blank" rel="external">https://storage.googleapis.com/kubernetes-release/release/v1.5.3/kubernetes-client-linux-amd64.tar.gz</a></p>
<p>kubernetes-server地址：<br><a href="https://storage.googleapis.com/kubernetes-release/release/v1.5.3/kubernetes-server-linux-amd64.tar.gz" target="_blank" rel="external">https://storage.googleapis.com/kubernetes-release/release/v1.5.3/kubernetes-server-linux-amd64.tar.gz</a></p>
<h3 id="第五步：在server端服务器解压包"><a href="#第五步：在server端服务器解压包" class="headerlink" title="第五步：在server端服务器解压包"></a>第五步：在server端服务器解压包</h3><p>tar zxvf kubernetes-server-linux-amd64.tar.gz cd kubernetes/server/bin </p>
<p>然后将文件复制到/usr/local/bin下<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">for i in `ls -F|grep "*"|awk '&#123;print $1&#125;'|awk -F "*" '&#123;print $1&#125;'`;</div><div class="line">do </div><div class="line">   cp $i /usr/local/bin/ ;</div><div class="line">done</div></pre></td></tr></table></figure></p>
<h3 id="第六步：启动master"><a href="#第六步：启动master" class="headerlink" title="第六步：启动master"></a>第六步：启动master</h3><p>启动api-server<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">kube-apiserver </div><div class="line">             --address=0.0.0.0 </div><div class="line">             --insecure-port=8080 </div><div class="line">             --service-cluster-ip-range='10.15.206.120/24' </div><div class="line">             --log_dir=/usr/local/kubernetes/logs/kube </div><div class="line">             --kubelet_port=10250 </div><div class="line">             --v=0 </div><div class="line">             --logtostderr=false </div><div class="line">             --etcd_servers=http://10.15.206.107:2379,http://10.15.206.108:2379,http://10.15.206.109:2379 </div><div class="line">             --allow_privileged=false &gt;&gt; /usr/local/kubernetes/logs/kube-apiserver.log 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p>
<p>启动controller-manager<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">kube-controller-manager </div><div class="line">                       --v=<span class="number">0</span> </div><div class="line">                       --logtostderr=<span class="literal">false</span> </div><div class="line">                       --log_dir=/usr/local/kubernetes/logs/kube </div><div class="line">                       --master=<span class="number">10.15</span><span class="number">.206</span><span class="number">.120</span>:<span class="number">8080</span> &gt;&gt; /usr/local/kubernetes/logs/kube-controller-manager <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</div></pre></td></tr></table></figure></p>
<p>启动scheduler<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">kube-scheduler </div><div class="line">              --master='10.15.206.120:8080' </div><div class="line">              --v=0 </div><div class="line">              --log_dir=/usr/local/kubernetes/logs/kube &gt;&gt; /usr/local/kubernetes/logs/kube-scheduler.log 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p>
<h3 id="第七步：验证是否成功"><a href="#第七步：验证是否成功" class="headerlink" title="第七步：验证是否成功"></a>第七步：验证是否成功</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">kubectl get componentstatuses </div><div class="line">     NAME           STATUS  MESSAGE               ERROR </div><div class="line">controller-manager Healthy    ok </div><div class="line">scheduler          Healthy    ok </div><div class="line">etcd<span class="number">-2</span>             Healthy    &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125; </div><div class="line">etcd<span class="number">-0</span>             Healthy    &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125; </div><div class="line">etcd<span class="number">-1</span>             Healthy    &#123;<span class="string">"health"</span>: <span class="string">"true"</span>&#125;</div></pre></td></tr></table></figure>
<h3 id="第八步：配置client"><a href="#第八步：配置client" class="headerlink" title="第八步：配置client"></a>第八步：配置client</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">tar zxvf kubernetes-client-linux-amd64.tar.gz </div><div class="line">cd kubernetes/client/bin </div><div class="line">cp * /usr/local/bin/</div></pre></td></tr></table></figure>
<h3 id="第九步：启动client"><a href="#第九步：启动client" class="headerlink" title="第九步：启动client"></a>第九步：启动client</h3><p>启动kubelet<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">kubelet </div><div class="line">       --logtostderr=<span class="literal">false</span> </div><div class="line">       --v=<span class="number">0</span> </div><div class="line">       --allow-privileged=<span class="literal">false</span> </div><div class="line">       --log_dir=/usr/local/kubernetes/logs/kube </div><div class="line">       --address=<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> </div><div class="line">       --port=<span class="number">10250</span> </div><div class="line">       --hostname_override=<span class="number">10.15</span><span class="number">.206</span><span class="number">.120</span> </div><div class="line">       --api_servers=http:<span class="comment">//10.15.206.120:8080 &gt;&gt; /usr/local/kubernetes/logs/kube-kubelet.log 2&gt;&amp;1 &amp;</span></div></pre></td></tr></table></figure></p>
<p>启动proxy<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">kube-proxy </div><div class="line">          --logtostderr=<span class="literal">false</span> </div><div class="line">          --v=<span class="number">0</span> </div><div class="line">          --master=http:<span class="comment">//10.15.206.120</span></div></pre></td></tr></table></figure></p>
<h2 id="第三种安装方案-calico"><a href="#第三种安装方案-calico" class="headerlink" title="第三种安装方案(calico)"></a>第三种安装方案(calico)</h2><h3 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍:"></a>环境介绍:</h3><table>
<thead>
<tr>
<th>服务器</th>
<th style="text-align:center">Ip</th>
<th style="text-align:center">Hosts</th>
</tr>
</thead>
<tbody>
<tr>
<td>Centos-7.3</td>
<td style="text-align:center">10.200.102.95</td>
<td style="text-align:center">k8s-master</td>
</tr>
<tr>
<td>Centos-7.3</td>
<td style="text-align:center">10.200.102.94</td>
<td style="text-align:center">k8s-node-1</td>
</tr>
<tr>
<td>Centos-7.3</td>
<td style="text-align:center">10.200.102.85</td>
<td style="text-align:center">k8s-node-2</td>
</tr>
<tr>
<td>Centos-7.3</td>
<td style="text-align:center">10.200.102.90</td>
<td style="text-align:center">k8s-node-3</td>
</tr>
</tbody>
</table>
<p>确保操作系统的内核是3.10版本以上的。<br>并且关闭防火墙和selinux。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">setenforce <span class="number">0</span></div><div class="line">systemctl stop firewalld.service</div><div class="line">systemctl disable firewalld.service</div></pre></td></tr></table></figure></p>
<p>根据需要是否配置必要的源，可以参考上述的源配置。</p>
<h3 id="etc环境安装-可以选择集群的方案安装"><a href="#etc环境安装-可以选择集群的方案安装" class="headerlink" title="etc环境安装(可以选择集群的方案安装)"></a>etc环境安装(可以选择集群的方案安装)</h3><p>服务器    IP    Hosts<br>|     服务器    |        Ip       |   Hosts   |<br>| ————- |:—————:|:———:|<br>|  Centos-7.3   |  10.200.102.85  |   Echo0   |<br>|  Centos-7.3   |  10.200.102.86  |   Echo1   |<br>|  Centos-7.3   |  10.200.102.84  |   Echo2   |</p>
<p>安装ectd环境<br><img src="/uploads/Kubernetes环境搭建/etcd-install.png" alt="etcd-install"></p>
<p>配置etcd信息<br><img src="/uploads/Kubernetes环境搭建/etcd-config.png" alt="etcd-config"></p>
<p><img src="/uploads/Kubernetes环境搭建/etcd-config2.png" alt="etcd-config2"></p>
<p>启动服务<br><img src="/uploads/Kubernetes环境搭建/etcd-start.png" alt="etcd-start"><br>所有的节点都进行如上相应的配置</p>
<h3 id="安装k8s-master环境"><a href="#安装k8s-master环境" class="headerlink" title="安装k8s master环境"></a>安装k8s master环境</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install kubernetes-master docker -y</div></pre></td></tr></table></figure>
<p>配置好相应的kubernetes信息<br><img src="/uploads/Kubernetes环境搭建/k8s-calico-config.png" alt="k8s-calico-config"></p>
<p><img src="/uploads/Kubernetes环境搭建/k8s-calico-apiserver.png" alt="k8s-calico-apiserver"></p>
<p>配置好docker信息<br><img src="/uploads/Kubernetes环境搭建/calico-docker.png" alt="calico-docker"></p>
<p>查看集群信息<br><img src="/uploads/Kubernetes环境搭建/calico-k8s-server.png" alt="calico-k8s-server"></p>
<h3 id="安装k8s-node环境"><a href="#安装k8s-node环境" class="headerlink" title="安装k8s node环境"></a>安装k8s node环境</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install kubernetes-node docker –y</div></pre></td></tr></table></figure>
<p>配置k8s和docker信息<br>配置kubectl<img src="/uploads/Kubernetes环境搭建/calico-k8s-kubectl.png" alt="calico-k8s-kubectl"><br>配置proxy<img src="/uploads/Kubernetes环境搭建/calico-k8s-proxy.png" alt="calico-k8s-proxy"><br>配置config<img src="/uploads/Kubernetes环境搭建/calico-k8s-config.png" alt="calico-k8s-config"><br>配置docker镜像拉取位置<img src="/uploads/Kubernetes环境搭建/calico-docker2.png" alt="calico-docker2"></p>
<p>查看集群信息<br><img src="/uploads/Kubernetes环境搭建/calico-k8s-server2.png" alt="calico-k8s-server2"></p>
<h3 id="安装kube-dns环境-master节点"><a href="#安装kube-dns环境-master节点" class="headerlink" title="安装kube-dns环境(master节点)"></a>安装kube-dns环境(master节点)</h3><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">下载kube-dns命令</div><div class="line"># wget https://dl.k8s.io/v1.5.2/kubernetes-server-linux-amd64.tar.gz</div><div class="line"># tar -xf kubernetes-server-linux-amd64.tar.gz</div><div class="line"># mv /opt/docker/src/kubernetes/server/bin/kube-dns /usr/bin/</div><div class="line"></div><div class="line">新建kube-dns配置文件</div><div class="line"># vi /etc/kubernetes/kube-dns</div><div class="line">KUBE_DNS_PORT="--dns-port=53"</div><div class="line">KUBE_DNS_DOMAIN="--domain=cluster.local"</div><div class="line">KUBE_DNS_MASTER=--kube-master-url="http://10.200.102.95:8080”</div><div class="line">KUBE_DNS_ARGS=""</div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">新建kube-dns.service配置文件</div><div class="line"><span class="meta"># cat /usr/lib/systemd/system/kube-dns.service</span></div><div class="line">[Unit]</div><div class="line">Description=Kubernetes Kube-dns Server</div><div class="line">Documentation=https:<span class="comment">//github.com/GoogleCloudPlatform/kubernetes</span></div><div class="line">After=kube-apiserver.service</div><div class="line">Requires=kube-apiserver.service</div><div class="line"> </div><div class="line">[Service]</div><div class="line">WorkingDirectory=/var/lib/kube-dns</div><div class="line">EnvironmentFile=-/etc/kubernetes/kube-dns</div><div class="line">ExecStart=/usr/bin/kube-dns \</div><div class="line">            $KUBE_DNS_PORT \</div><div class="line">            $KUBE_DNS_DOMAIN \</div><div class="line">            $KUBE_DNS_MASTER \</div><div class="line">            $KUBE_DNS_ARGS</div><div class="line">Restart=on-failure</div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">Master启动</div><div class="line"><span class="meta"># mkdir -p /var/lib/kube-dns</span></div><div class="line"><span class="meta"># systemctl enable kube-dns</span></div><div class="line"><span class="meta"># systemctl restart kube-dns</span></div><div class="line"></div><div class="line">master修改/etc/resolv.conf文件</div><div class="line"><span class="meta"># cat /etc/resolv.conf</span></div><div class="line"># Generated by NetworkManager</div><div class="line">search <span class="keyword">default</span>.svc.cluster.local svc.cluster.local cluster.local</div><div class="line">nameserver <span class="number">10.200</span><span class="number">.102</span><span class="number">.95</span></div><div class="line">nameserver <span class="number">223.5</span><span class="number">.5</span><span class="number">.5</span></div><div class="line">nameserver <span class="number">202.96</span><span class="number">.128</span><span class="number">.86</span></div></pre></td></tr></table></figure>
<p>node结点修改kubelet文件<br><img src="/uploads/Kubernetes环境搭建/calico-edit-kubectl.png" alt="calico-edit-kubectl"></p>
<p>验证kube-dns是否安装成功<br><img src="/uploads/Kubernetes环境搭建/kube-dns.png" alt="kube-dns"></p>
<h3 id="安装calico环境"><a href="#安装calico环境" class="headerlink" title="安装calico环境"></a>安装calico环境</h3><p>配置各个节点docker环境：<br><img src="/uploads/Kubernetes环境搭建/calico-docker-node-1.png" alt="calico-docker-node-1"><br><img src="/uploads/Kubernetes环境搭建/calico-docker-node-2.png" alt="calico-docker-node-2"><br><img src="/uploads/Kubernetes环境搭建/calico-docker-node-3.png" alt="calico-docker-node-3"></p>
<p>配置好，记得重启docker<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># systemctl  daemon-reload</span></div><div class="line"><span class="meta"># systemctl  restart docker</span></div></pre></td></tr></table></figure></p>
<p>下载calico插件<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">Master节点：</div><div class="line"><span class="meta"># wget https:<span class="comment">//github.com/projectcalico/calicoctl/releases/download/v1.1.0/calicoctl</span></span></div><div class="line"><span class="meta"># chmod +x calicoctl</span></div><div class="line"><span class="meta"># mv calicoctl  /usr/bin/</span></div><div class="line"><span class="meta"># docker pull docker.io/calico/node:v1.1.0</span></div><div class="line"><span class="meta"># docker tag  docker.io/calico/node:v1.1.0  quay.io/calico/node:v1.1.0</span></div><div class="line"><span class="meta">#wget N -P /opt/cni/bin/ </span></div><div class="line">https:<span class="comment">//github.com/projectcalico/calico-cni/releases/download/v1.6.0/calico</span></div><div class="line"><span class="meta"># wget -N -P /opt/cni/bin/ </span></div><div class="line">https:<span class="comment">//github.com/projectcalico/calico-cni/releases/download/v1.6.0/calico-ipam</span></div><div class="line"><span class="meta"># chmod +x /opt/cni/bin/calico /opt/cni/bin/calico-ipam</span></div><div class="line"></div><div class="line">Node节点：</div><div class="line"><span class="meta"># docker pull docker.io/calico/node:v1.1.0</span></div><div class="line"><span class="meta"># docker tag  docker.io/calico/node:v1.1.0  quay.io/calico/node:v1.1.0</span></div><div class="line"><span class="meta"># wget -N -P /opt/cni/bin/ </span></div><div class="line">https:<span class="comment">//github.com/projectcalico/calico-cni/releases/download/v1.6.0/calico</span></div><div class="line"><span class="meta"># wget -N -P /opt/cni/bin/ </span></div><div class="line">https:<span class="comment">//github.com/projectcalico/calico-cni/releases/download/v1.6.0/calico-ipam</span></div><div class="line"><span class="meta"># chmod +x /opt/cni/bin/calico /opt/cni/bin/calico-ipam</span></div></pre></td></tr></table></figure></p>
<p>配置文件(所有节点)<br><img src="/uploads/Kubernetes环境搭建/calico-config-1.png" alt="calico-config-1"><br><img src="/uploads/Kubernetes环境搭建/calico-config-2.png" alt="calico-config-2"><br><img src="/uploads/Kubernetes环境搭建/calico-config-3.png" alt="calico-config-3"></p>
<p>Master机上<br>wget <a href="http://docs.projectcalico.org/v1.5/getting-started/kubernetes/installation/policy-controller.yaml" target="_blank" rel="external">http://docs.projectcalico.org/v1.5/getting-started/kubernetes/installation/policy-controller.yaml</a></p>
<p>修改 policy-controller.yaml文件里的etcd的地址<br><img src="/uploads/Kubernetes环境搭建/policy-controller.png" alt="policy-controller"></p>
<p>启动文件：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># serivce etcd restart</span></div><div class="line"><span class="meta"># kubectl  create -f policy-controller.yaml</span></div><div class="line"></div><div class="line">每个节点上启动calico-node服务(ETCD_AUTHORITY可以配置多个（集群方案）)</div><div class="line"><span class="meta"># systemctl enable calico-node</span></div><div class="line"><span class="meta"># systemctl start calico-node</span></div><div class="line"><span class="meta"># export ETCD_AUTHORITY=10.200.102.85:2379</span></div><div class="line"></div><div class="line">验证calico是否启动正常</div><div class="line">calicoctl node status</div><div class="line">calicoctl get nodes --out=wide</div></pre></td></tr></table></figure></p>
<p><img src="/uploads/Kubernetes环境搭建/calico-node-status.png" alt="calico-node-status"><br><img src="/uploads/Kubernetes环境搭建/calico-node.png" alt="calico-node"></p>
<p>添加子网<br><img src="/uploads/Kubernetes环境搭建/calico-pool.png" alt="calico-pool"><img src="/uploads/Kubernetes环境搭建/do-pool.png" alt="do-pool"><br><img src="/uploads/Kubernetes环境搭建/get-pool.png" alt="get-pool"></p>
<p>至此calico的k8s方案搭建成功</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;&lt;/p&gt;
&lt;h2 id=&quot;第一种安装方案-官网&quot;&gt;&lt;a href=&quot;#第一种安装方案-官网&quot; class=&quot;headerli
    
    </summary>
    
      <category term="容器化" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/"/>
    
      <category term="服务搭建" scheme="http://jeromeliu.win/categories/%E5%AE%B9%E5%99%A8%E5%8C%96/%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Kubernetes" scheme="http://jeromeliu.win/tags/Kubernetes/"/>
    
      <category term="Docker" scheme="http://jeromeliu.win/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Java HashMap 源码解析</title>
    <link href="http://jeromeliu.win/2017/04/19/Java-HashMap-%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90/"/>
    <id>http://jeromeliu.win/2017/04/19/Java-HashMap-源码解析/</id>
    <published>2017-04-19T02:26:08.000Z</published>
    <updated>2017-04-19T07:21:39.458Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote><br>继上一篇文章<a href="/2017/04/19/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%BB%BC%E8%BF%B0/">Java集合框架综述</a>后，今天正式开始分析具体集合类的代码，首先以既熟悉又陌生的<a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/util/HashMap.html" target="_blank" rel="external">HashMap</a>开始。</p>
<h2 id="签名-signature"><a href="#签名-signature" class="headerlink" title="签名(signature)"></a>签名(signature)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashMap</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span></div><div class="line">       <span class="keyword">extends</span> <span class="title">AbstractMap</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </div><div class="line">       <span class="keyword">implements</span> <span class="title">Map</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt;, <span class="title">Cloneable</span>, <span class="title">Serializable</span></div></pre></td></tr></table></figure>
<p>可以看到<code style="color:red">HashMap</code>继承了</p>
<ul>
<li>标记接口<a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/lang/Cloneable.html" target="_blank" rel="external">Cloneable</a>，用于表明HashMap对象会重写java.lang.Object#clone()方法，HashMap实现的是浅拷贝（shallow copy）。</li>
<li>标记接口<a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/io/Serializable.html" target="_blank" rel="external">Serializable</a>，用于表明HashMap对象可以被序列化比较有意思的是，HashMap同时继承了抽象类AbstractMap与接口Map，因为抽象类AbstractMap的签名为<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">AbstractMap</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt;</span></div><div class="line">                <span class="keyword">implements</span> <span class="title">Map</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt;</div><div class="line">  </div></pre></td></tr></table></figure>
<a href="http://stackoverflow.com/questions/14062286/java-why-does-weakhashmap-implement-map-whereas-it-is-already-implemented-by-ab" target="_blank" rel="external">Stack Overfloooow</a>上解释到：<br>在语法层面继承接口<code style="color:red">Map</code>是多余的，这么做仅仅是为了让阅读代码的人明确知道<code style="color:red">HashMap</code>是属于<code style="color:red">Map</code>体系的，起到了文档的作用</li>
</ul>
<p><code style="color:red">AbstractMap</code>相当于个辅助类，<code style="color:red">Map</code>的一些操作这里面已经提供了默认实现，后面具体的子类如果没有特殊行为，可直接使用<code style="color:red">AbstractMap</code>提供的实现。</p>
<h3 id="Cloneable接口"><a href="#Cloneable接口" class="headerlink" title="Cloneable接口"></a><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/lang/Cloneable.html" target="_blank" rel="external">Cloneable</a>接口</h3><p><code style="color:red">Cloneable</code>这个接口设计的非常不好，最致命的一点是它里面竟然没有<code style="color:red">clone</code>方法，也就是说我们自己写的类完全可以实现这个接口的同时不重写<code style="color:red">clone</code>方法。<br>关于<code style="color:red">Cloneable</code>的不足，大家可以去看看《Effective Java》一书的作者<a href="http://www.artima.com/intv/bloch13.html" target="_blank" rel="external">给出的理由</a>，在所给链接的文章里，Josh Bloch也会讲如何实现深拷贝比较好，我这里就不在赘述了。</p>
<h3 id="Map接口"><a href="#Map接口" class="headerlink" title="Map接口"></a><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/util/Map.html" target="_blank" rel="external">Map</a>接口</h3><p>在eclipse中的outline面板可以看到<code style="color:red">Map</code>接口里面包含以下成员方法与内部类：<br><img src="/uploads/Java HashMap 源码解析/Map.png" alt="Map"> <div style="margin-left: 250px;font-size: 13px;margin-top: -25px;">Map_field_method</div><br>可以看到，这里的成员方法不外乎是“增删改查”，这也反映了我们编写程序时，一定是以“数据”为导向的。</p>
<p>在<a href="/2017/04/19/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%BB%BC%E8%BF%B0/">上篇文章</a>讲了Map虽然并不是Collection，但是它提供了三种“集合视角”(collection views)，与下面三个方法一一对应：</p>
<ul>
<li><code style="color:red">Set<k> keySet()</k></code>，提供key的集合视角</li>
<li><code style="color:red">Collection<v> values()</v></code>，提供value的集合视角</li>
<li><code style="color:red">Set<map.entry<k, v="">&gt; entrySet()</map.entry<k,></code>，提供key-value序对的集合视角，这里用内部类Map.Entry表示序对</li>
</ul>
<h3 id="AbstractMap抽象类"><a href="#AbstractMap抽象类" class="headerlink" title="AbstractMap抽象类"></a><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/util/AbstractMap.html" target="_blank" rel="external">AbstractMap</a>抽象类</h3><p>AbstractMap对Map中的方法提供了一个基本实现，减少了实现Map接口的工作量。<br>举例来说：<br>   如果要实现个不可变(unmodifiable)的map，那么只需继承<code style="color:red">AbstractMap</code>，然后实现其<code style="color:red">entrySet</code>方法，这个方法返回的set不支持add与remove，同时这个set的迭代器(iterator)不支持remove操作即可。</p>
<p>   相反，如果要实现个可变(modifiable的map，首先继承<code style="color:red">AbstractMap</code>，然后重写(override)AbstractMap的put方法，同时实现<code style="color:red">entrySet</code>所返回set的迭代器的remove方法即可。</p>
<h2 id="设计理念-design-concept"><a href="#设计理念-design-concept" class="headerlink" title="设计理念(design concept)"></a>设计理念(design concept)</h2><h3 id="哈希表-hash-table"><a href="#哈希表-hash-table" class="headerlink" title="哈希表(hash table)"></a>哈希表(hash table)</h3><p><code style="color:red">HashMap</code>是一种基于<a href="https://en.wikipedia.org/wiki/Hash_table" target="_blank" rel="external">哈希表(hash table)</a>实现的map，哈希表（也叫关联数组）一种通用的数据结构，大多数的现代语言都原生支持，其概念也比较简单：<code style="color:red">key经过hash函数作用后得到一个槽（buckets或slots）的索引（index），槽中保存着我们想要获取的值</code>，如下图所示<br><img src="/uploads/Java HashMap 源码解析/Hash Table.png" alt="HashTable"> <div style="margin-left: 220px;font-size: 13px;margin-top: -25px;">hash table demo</div></p>
<p>很容易想到，一些不同的key经过同一hash函数后可能产生相同的索引，也就是产生了冲突，这是在所难免的。<br>所以利用哈希表这种数据结构实现具体类时，需要：</p>
<ul>
<li>设计个好的hash函数，使冲突尽可能的减少</li>
<li>其次是需要解决发生冲突后如何处理。</li>
</ul>
<p>后面会重点介绍<code style="color:red">HashMap</code>是如何解决这两个问题的。</p>
<h3 id="HashMap的一些特点"><a href="#HashMap的一些特点" class="headerlink" title="HashMap的一些特点"></a>HashMap的一些特点</h3><ul>
<li>线程非安全，并且允许key与value都为null值，HashTable与之相反，为线程安全，key与value都不允许null值。</li>
<li>不保证其内部元素的顺序，而且随着时间的推移，同一元素的位置也可能改变（resize的情况）</li>
<li>put、get操作的时间复杂度为O(1)。</li>
<li>遍历其集合视角的时间复杂度与其容量（capacity，槽的个数）和现有元素的大小（entry的个数）成正比，所以如果遍历的性能要求很高，不要把capactiy设置的过高或把平衡因子（load factor，当entry数大于capacity*loadFactor时，会进行resize，reside会导致key进行rehash）设置的过低。</li>
<li>由于HashMap是线程非安全的，这也就是意味着如果多个线程同时对一hashmap的集合试图做迭代时有结构的上改变（添加、删除entry，只改变entry的value的值不算结构改变），那么会报ConcurrentModificationException，专业术语叫fail-fast，尽早报错对于多线程程序来说是很有必要的。</li>
<li>Map m = Collections.synchronizedMap(new HashMap(…)); 通过这种方式可以得到一个线程安全的map。</li>
</ul>
<h2 id="源码剖析"><a href="#源码剖析" class="headerlink" title="源码剖析"></a>源码剖析</h2><p>首先从构造函数开始讲，<code style="color:red">HashMap</code>遵循<a href="/2017/04/19/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%BB%BC%E8%BF%B0/">集合框架的约束</a>，提供了一个参数为空的构造函数与有一个参数且参数类型为Map的构造函数。除此之外，还提供了两个构造函数，用于设置<code style="color:red">HashMap</code>的容量（capacity）与平衡因子（loadFactor）。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity, <span class="keyword">float</span> loadFactor)</span> </span>&#123;</div><div class="line">    <span class="comment">//桶数组的大小小于0时抛异常</span></div><div class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal initial capacity: "</span> + initialCapacity);</div><div class="line">    <span class="comment">//如果桶数组的大小超过最大值，则简单的将桶容量修改为最大值2的30次方</span></div><div class="line">    <span class="keyword">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY)</div><div class="line">        initialCapacity = MAXIMUM_CAPACITY;</div><div class="line">    <span class="comment">//如果负载因子不符合规范，那么抛异常</span></div><div class="line">    <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor))</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal load factor: "</span> + loadFactor);</div><div class="line">    <span class="keyword">this</span>.loadFactor = loadFactor;</div><div class="line">    threshold = initialCapacity;</div><div class="line">    init();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">HashMap</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">this</span>(DEFAULT_INITIAL_CAPACITY, DEFAULT_LOAD_FACTOR);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>从代码上可以看到，容量与平衡因子都有个默认值，并且容量有个最大值<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The default initial capacity - MUST be a power of two.</div><div class="line"> */</div><div class="line"><span class="comment">//默认的桶数组大小</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_INITIAL_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">4</span>; <span class="comment">// aka 16</span></div><div class="line"><span class="comment">/**</span></div><div class="line"> * The maximum capacity, used if a higher value is implicitly specified</div><div class="line"> * by either of the constructors with arguments.</div><div class="line"> * MUST be a power of two &lt;= 1&lt;&lt;30.</div><div class="line"> */</div><div class="line"><span class="comment">//极限值（超过这个值就将threshold修改为Integer.MAX_VALUE（此时桶大小已经是2的31次方了），表明不进行扩容了）</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXIMUM_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</div><div class="line"><span class="comment">/**</span></div><div class="line"> * The load factor used when none specified in constructor.</div><div class="line"> */</div><div class="line"><span class="comment">//负载因子</span></div><div class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_LOAD_FACTOR = <span class="number">0.75f</span>;</div></pre></td></tr></table></figure><br>可以看到，默认的平衡因子为0.75，这是权衡了时间复杂度与空间复杂度之后的最好取值（JDK说是最好的😂），过高的因子会降低存储空间但是查找（lookup，包括HashMap中的put与get方法）的时间就会增加。<br>这里比较奇怪的是问题：容量必须为2的指数倍（默认为16），这是为什么呢？解答这个问题，需要了解HashMap中哈希函数的设计原理。</p>
<h3 id="哈希函数的设计原理"><a href="#哈希函数的设计原理" class="headerlink" title="哈希函数的设计原理"></a>哈希函数的设计原理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line">  * Retrieve object hash code and applies a supplemental hash function to the</div><div class="line">  * result hash, which defends against poor quality hash functions.  This is</div><div class="line">  * critical because HashMap uses power-of-two length hash tables, that</div><div class="line">  * otherwise encounter collisions for hashCodes that do not differ</div><div class="line">  * in lower bits. Note: Null keys always map to hash 0, thus index 0.</div><div class="line">  */</div><div class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Object k)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> h = hashSeed;</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> != h &amp;&amp; k <span class="keyword">instanceof</span> String) &#123;</div><div class="line">        <span class="keyword">return</span> sun.misc.Hashing.stringHash32((String) k);</div><div class="line">    &#125;</div><div class="line">    h ^= k.hashCode();</div><div class="line">    <span class="comment">// This function ensures that hashCodes that differ only by</span></div><div class="line">    <span class="comment">// constant multiples at each bit position have a bounded</span></div><div class="line">    <span class="comment">// number of collisions (approximately 8 at default load factor).</span></div><div class="line">    h ^= (h &gt;&gt;&gt; <span class="number">20</span>) ^ (h &gt;&gt;&gt; <span class="number">12</span>);</div><div class="line">    <span class="keyword">return</span> h ^ (h &gt;&gt;&gt; <span class="number">7</span>) ^ (h &gt;&gt;&gt; <span class="number">4</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">  * Returns index for hash code h.</div><div class="line">  */</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">indexFor</span><span class="params">(<span class="keyword">int</span> h, <span class="keyword">int</span> length)</span> </span>&#123;</div><div class="line">    <span class="comment">// assert Integer.bitCount(length) == 1 : "length must be a non-zero power of 2";</span></div><div class="line">    <span class="keyword">return</span> h &amp; (length-<span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>看到这么多位操作，是不是觉得晕头转向了呢，还是搞清楚原理就行了，毕竟位操作速度是很快的，不能因为不好理解就不用了。<br>网上说这个问题的也比较多，我这里根据自己的理解，尽量做到通俗易懂。<br>在哈希表容量（也就是buckets或slots大小）为length的情况下，为了使每个key都能在冲突最小的情况下映射到<code style="color:red">[0,length)</code>（注意是左闭右开区间）的索引（index）内，一般有两种做法:<br>   <span style="margin-left: 20px;"></span>1.让length为素数，然后用<code style="color:red">hashCode(key) mod length</code>的方法得到索引<br>   <span style="margin-left: 20px;"></span>2.让length为2的指数倍，然后用<code style="color:red">hashCode(key) &amp; (length-1)</code>的方法得到索引<br><a href="http://docs.oracle.com/javase/7/docs/api/index.html?java/util/Hashtable.html" target="_blank" rel="external">HashTable</a>用的是方法1，<code style="color:red">HashMap</code>用的是方法2。<br>因为本篇主题讲的是HashMap，所以关于方法1为什么要用素数，我这里不想过多介绍，大家可以看<a href="https://math.stackexchange.com/questions/183909/why-choose-a-prime-number-as-the-number-of-slots-for-hashing-function-that-uses" target="_blank" rel="external">这里</a>。<br>重点说说方法2的情况，方法2其实也比较好理解：<br><span style="margin-left: 20px;"></span>因为length为2的指数倍，所以<code style="color:red">length-1</code>所对应的二进制位都为1，然后在与<code style="color:red">hashCode(key)</code>做与运算，即可得到<code style="color:red">[0,length)</code>内的索引。<br>但是这里有个问题，如果<code style="color:red">hashCode(key)</code>的大于length的值，而且<code style="color:red">hashCode(key)</code>的二进制位的低位变化不大，那么冲突就会很多，举个例子：<br>   <span style="margin-left: 20px;"></span>Java中对象的哈希值都32位整数，而HashMap默认大小为16，那么有两个对象那么的哈希值分别为：<code style="color:red">0xABAB0000</code>与<code style="color:red">0xBABA0000</code>，它们的后几位都是一样，那么与16异或后得到结果应该也是一样的，也就是产生了冲突。</p>
<p>造成冲突的原因关键在于16限制了只能用低位来计算，高位直接舍弃了，所以我们需要额外的哈希函数而不只是简单的对象的<code style="color:red">hashCode</code>方法了。<br>具体来说，就是HashMap中<code style="color:red">hash</code>函数干的事了。<br>   <span style="margin-left: 20px;"></span>首先有个随机的hashSeed，来降低冲突发生的几率然后如果是字符串，用了<code style="color:red">sun.misc.Hashing.stringHash32((String) k)</code>来获取索引值最后，通过一系列无符号右移操作，来把高位与低位进行异或操作，来降低冲突发生的几率</p>
<p>右移的偏移量20，12，7，4是怎么来的呢？因为Java中对象的哈希值都是32位的，所以这几个数应该就是把高位与低位做异或运算，至于这几个数是如何选取的，就不清楚了，网上搜了半天也没统一且让人信服的说法，大家可以参考下面几个链接：</p>
<ul>
<li><a href="http://stackoverflow.com/questions/7922019/openjdks-rehashing-mechanism/7922219#7922219" target="_blank" rel="external">http://stackoverflow.com/questions/7922019/openjdks-rehashing-mechanism/7922219#7922219</a></li>
<li><a href="http://stackoverflow.com/questions/9335169/understanding-strange-java-hash-function/9336103#9336103" target="_blank" rel="external">http://stackoverflow.com/questions/9335169/understanding-strange-java-hash-function/9336103#9336103</a></li>
<li><a href="http://stackoverflow.com/questions/14453163/can-anybody-explain-how-java-design-hashmaps-hash-function/14479945#14479945" target="_blank" rel="external">http://stackoverflow.com/questions/14453163/can-anybody-explain-how-java-design-hashmaps-hash-function/14479945#14479945</a></li>
</ul>
<h3 id="HashMap-Entry"><a href="#HashMap-Entry" class="headerlink" title="HashMap.Entry"></a>HashMap.Entry</h3><p>HashMap中存放的是HashMap.Entry对象，它继承自Map.Entry，其比较重要的是构造函数<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">final</span> K key;</div><div class="line">    V value;</div><div class="line">    Entry&lt;K,V&gt; next;</div><div class="line">    <span class="keyword">int</span> hash;</div><div class="line">    Entry(<span class="keyword">int</span> h, K k, V v, Entry&lt;K,V&gt; n) &#123;</div><div class="line">        value = v;</div><div class="line">        next = n;</div><div class="line">        key = k;</div><div class="line">        hash = h;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// setter, getter, equals, toString 方法省略</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//用key的hash值与上value的hash值作为Entry的hash值</span></div><div class="line">        <span class="keyword">return</span> Objects.hashCode(getKey()) ^ Objects.hashCode(getValue());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Thismethodis invoked whenever the value in an entry is</div><div class="line">     * overwritten by an invocation of put(k,v) for a key k that's already</div><div class="line">     * in the HashMap.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">recordAccess</span><span class="params">(HashMap&lt;K,V&gt; m)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Thismethodis invoked whenever the entry is</div><div class="line">     * removed from the table.</div><div class="line">     */</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">recordRemoval</span><span class="params">(HashMap&lt;K,V&gt; m)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>可以看到，Entry实现了单向链表的功能，用<code style="color:red">next</code>成员变量来级连起来。<br>介绍完Entry对象，下面要说一个比较重要的成员变量:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The table, resized as necessary. Length MUST Always be a power of two.</div><div class="line"> */</div><div class="line"><span class="comment">//HashMap内部维护了一个为数组类型的Entry变量table，用来保存添加进来的Entry对象</span></div><div class="line"><span class="keyword">transient</span> Entry&lt;K,V&gt;[] table = (Entry&lt;K,V&gt;[]) EMPTY_TABLE;</div></pre></td></tr></table></figure><br>你也许会疑问，Entry不是单向链表嘛，怎么这里又需要个数组类型的table呢？<br>我翻了下之前的算法书，其实这是解决冲突的一个方式：<a href="https://en.wikipedia.org/wiki/Hash_table#Separate_chaining" target="_blank" rel="external">链地址法(开散列法)</a>，效果如下：<br><img src="/uploads/Java HashMap 源码解析/链地址法.gif" alt="链地址法"> <div style="margin-left: 90px;font-size: 13px;">链地址法处理冲突得到的散列表</div><br>就是相同索引值的Entry，会以单向链表的形式存在</p>
<h4 id="链地址法的可视化"><a href="#链地址法的可视化" class="headerlink" title="链地址法的可视化"></a>链地址法的可视化</h4><p>下面的链接可以模仿哈希表采用链地址法解决冲突:</p>
<ul>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/OpenHash.html" target="_blank" rel="external">https://www.cs.usfca.edu/~galles/visualization/OpenHash.html</a></li>
</ul>
<h3 id="get操作"><a href="#get操作" class="headerlink" title="get操作"></a>get操作</h3><p>get操作相比put操作简单，所以先介绍get操作<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">    <span class="comment">//单独处理key为null的情况</span></div><div class="line">    <span class="keyword">if</span> (key == <span class="keyword">null</span>)</div><div class="line">        <span class="keyword">return</span> getForNullKey();</div><div class="line">    Entry&lt;K,V&gt; entry = getEntry(key);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span> == entry ? <span class="keyword">null</span> : entry.getValue();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> V <span class="title">getForNullKey</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//key为null的Entry用于放在table[0]中，但是在table[0]冲突链中的Entry的key不一定为null</span></div><div class="line">    <span class="comment">//所以需要遍历冲突链，查找key是否存在</span></div><div class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[<span class="number">0</span>]; e != <span class="keyword">null</span>; e = e.next) &#123;</div><div class="line">        <span class="keyword">if</span> (e.key == <span class="keyword">null</span>)</div><div class="line">            <span class="keyword">return</span> e.value;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">final</span> Entry&lt;K,V&gt; <span class="title">getEntry</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> hash = (key == <span class="keyword">null</span>) ? <span class="number">0</span> : hash(key);</div><div class="line">    <span class="comment">//首先定位到索引在table中的位置</span></div><div class="line">    <span class="comment">//然后遍历冲突链，查找key是否存在</span></div><div class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[indexFor(hash, table.length)]; e != <span class="keyword">null</span>; e = e.next) &#123;</div><div class="line">        Object k;</div><div class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k))))</div><div class="line">            <span class="keyword">return</span> e;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="put操作-含update操作"><a href="#put操作-含update操作" class="headerlink" title="put操作(含update操作)"></a>put操作(含update操作)</h3><p>因为put操作有可能需要对HashMap进行resize，所以实现略复杂些<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inflateTable</span><span class="params">(<span class="keyword">int</span> toSize)</span> </span>&#123;</div><div class="line">    <span class="comment">//辅助函数，用于填充HashMap到指定的capacity</span></div><div class="line">    <span class="comment">// Find a power of 2 &gt;= toSize</span></div><div class="line">    <span class="keyword">int</span> capacity = roundUpToPowerOf2(toSize);</div><div class="line">    <span class="comment">//threshold为resize的阈值，超过后HashMap会进行resize，内容的entry会进行rehash</span></div><div class="line">    threshold = (<span class="keyword">int</span>) Math.min(capacity * loadFactor, MAXIMUM_CAPACITY + <span class="number">1</span>);</div><div class="line">    table = <span class="keyword">new</span> Entry[capacity];</div><div class="line">    initHashSeedAsNeeded(capacity);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">  * Associates the specified value with the specified key in this map.</div><div class="line">  * If the map previously contained a mapping for the key, the old</div><div class="line">  * value is replaced.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (table == EMPTY_TABLE) &#123;</div><div class="line">        inflateTable(threshold);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (key == <span class="keyword">null</span>)</div><div class="line">        <span class="keyword">return</span> putForNullKey(value);</div><div class="line">    <span class="keyword">int</span> hash = hash(key);</div><div class="line">    <span class="keyword">int</span> i = indexFor(hash, table.length);</div><div class="line">    <span class="comment">//这里的循环是关键</span></div><div class="line">    <span class="comment">//当新增的key所对应的索引i，对应table[i]中已经有值时，进入循环体</span></div><div class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class="keyword">null</span>; e = e.next) &#123;</div><div class="line">        Object k;</div><div class="line">        <span class="comment">//判断是否存在本次插入的key，如果存在用本次的value替换之前oldValue，相当于update操作</span></div><div class="line">        <span class="comment">//并返回之前的oldValue</span></div><div class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) &#123;</div><div class="line">            V oldValue = e.value;</div><div class="line">            e.value = value;</div><div class="line">            e.recordAccess(<span class="keyword">this</span>);</div><div class="line">            <span class="keyword">return</span> oldValue;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//如果本次新增key之前不存在于HashMap中，modCount加1，说明结构改变了</span></div><div class="line">    modCount++;</div><div class="line">    addEntry(hash, key, value, i);</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEntry</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">int</span> bucketIndex)</span> </span>&#123;</div><div class="line">    <span class="comment">//如果增加一个元素会后，HashMap的大小超过阈值，需要resize</span></div><div class="line">    <span class="keyword">if</span> ((size &gt;= threshold) &amp;&amp; (<span class="keyword">null</span> != table[bucketIndex])) &#123;</div><div class="line">        <span class="comment">//增加的幅度是之前的1倍</span></div><div class="line">        resize(<span class="number">2</span> * table.length);</div><div class="line">        hash = (<span class="keyword">null</span> != key) ? hash(key) : <span class="number">0</span>;</div><div class="line">        bucketIndex = indexFor(hash, table.length);</div><div class="line">    &#125;</div><div class="line">    createEntry(hash, key, value, bucketIndex);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">createEntry</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">int</span> bucketIndex)</span> </span>&#123;</div><div class="line">    <span class="comment">//首先得到该索引处的冲突链Entries，第一次插入bucketIndex位置时冲突链为null，也就是e为null</span></div><div class="line">    Entry&lt;K,V&gt; e = table[bucketIndex];</div><div class="line">    <span class="comment">//然后把新的Entry添加到冲突链的开头，也就是说，后插入的反而在前面（第一次还真没看明白）</span></div><div class="line">    <span class="comment">//table[bucketIndex]为新加入的Entry，是bucketIndex位置的冲突链的第一个元素</span></div><div class="line">    table[bucketIndex] = <span class="keyword">new</span> Entry&lt;&gt;(hash, key, value, e);</div><div class="line">    size++;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//下面看看HashMap是如何进行resize，庐山真面目就要揭晓了😊</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> newCapacity)</span> </span>&#123;</div><div class="line">    Entry[] oldTable = table;</div><div class="line">    <span class="keyword">int</span> oldCapacity = oldTable.length;</div><div class="line">    <span class="comment">//如果已经达到最大容量，那么就直接返回</span></div><div class="line">    <span class="keyword">if</span> (oldCapacity == MAXIMUM_CAPACITY) &#123;</div><div class="line">        threshold = Integer.MAX_VALUE;</div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line">    Entry[] newTable = <span class="keyword">new</span> Entry[newCapacity];</div><div class="line">    <span class="comment">//initHashSeedAsNeeded(newCapacity)的返回值决定了是否需要重新计算Entry的hash值</span></div><div class="line">    transfer(newTable, initHashSeedAsNeeded(newCapacity));</div><div class="line">    table = newTable;</div><div class="line">     threshold = (<span class="keyword">int</span>)Math.min(newCapacity * loadFactor, MAXIMUM_CAPACITY + <span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line">  * Transfers all entries from current table to newTable.</div><div class="line">*/</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">transfer</span><span class="params">(Entry[] newTable, <span class="keyword">boolean</span> rehash)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> newCapacity = newTable.length;</div><div class="line">    <span class="comment">//遍历当前的table，将里面的元素添加到新的newTable中</span></div><div class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e : table) &#123;</div><div class="line">        <span class="keyword">while</span>(<span class="keyword">null</span> != e) &#123;</div><div class="line">            Entry&lt;K,V&gt; next = e.next;</div><div class="line">            <span class="keyword">if</span> (rehash) &#123;</div><div class="line">                e.hash = <span class="keyword">null</span> == e.key ? <span class="number">0</span> : hash(e.key);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">int</span> i = indexFor(e.hash, newCapacity);</div><div class="line">            e.next = newTable[i];</div><div class="line">           <span class="comment">//最后这两句用了与put放过相同的技巧</span></div><div class="line">           <span class="comment">//将后插入的反而在前面</span></div><div class="line">            newTable[i] = e;</div><div class="line">            e = next;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"> * Initialize the hashing mask value. We defer initialization until we</div><div class="line"> * really need it.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">initHashSeedAsNeeded</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</div><div class="line">    <span class="keyword">boolean</span> currentAltHashing = hashSeed != <span class="number">0</span>;</div><div class="line">    <span class="keyword">boolean</span> useAltHashing = sun.misc.VM.isBooted() &amp;&amp; (capacity &gt;= Holder.ALTERNATIVE_HASHING_THRESHOLD);</div><div class="line">    <span class="comment">//这里说明了，在hashSeed不为0或满足useAltHash时，会重算Entry的hash值</span></div><div class="line">    <span class="comment">//至于useAltHashing的作用可以参考下面的链接</span></div><div class="line">    <span class="comment">// http://stackoverflow.com/questions/29918624/what-is-the-use-of-holder-class-in-hashmap</span></div><div class="line">    <span class="keyword">boolean</span> switching = currentAltHashing ^ useAltHashing;</div><div class="line">    <span class="keyword">if</span> (switching) &#123;</div><div class="line">        hashSeed = useAltHashing ? sun.misc.Hashing.randomHashSeed(<span class="keyword">this</span>) : <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> switching;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="remove操作"><a href="#remove操作" class="headerlink" title="remove操作"></a>remove操作</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> V <span class="title">remove</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">    Entry&lt;K,V&gt; e = removeEntryForKey(key);</div><div class="line">    <span class="comment">//可以看到删除的key如果存在，就返回其所对应的value</span></div><div class="line">    <span class="keyword">return</span> (e == <span class="keyword">null</span> ? <span class="keyword">null</span> : e.value);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">final</span> Entry&lt;K,V&gt; <span class="title">removeEntryForKey</span><span class="params">(Object key)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (size == <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">int</span> hash = (key == <span class="keyword">null</span>) ? <span class="number">0</span> : hash(key);</div><div class="line">    <span class="keyword">int</span> i = indexFor(hash, table.length);</div><div class="line">    <span class="comment">//这里用了两个Entry对象，相当于两个指针，为的是防治冲突链发生断裂的情况</span></div><div class="line">    <span class="comment">//这里的思路就是一般的单向链表的删除思路</span></div><div class="line">    Entry&lt;K,V&gt; prev = table[i];</div><div class="line">    Entry&lt;K,V&gt; e = prev;</div><div class="line">    <span class="comment">//当table[i]中存在冲突链时，开始遍历里面的元素</span></div><div class="line">    <span class="keyword">while</span> (e != <span class="keyword">null</span>) &#123;</div><div class="line">        Entry&lt;K,V&gt; next = e.next;</div><div class="line">        Object k;</div><div class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k)))) &#123;</div><div class="line">            modCount++;</div><div class="line">            size--;</div><div class="line">            <span class="keyword">if</span> (prev == e) <span class="comment">//当冲突链只有一个Entry时</span></div><div class="line">                table[i] = next;</div><div class="line">            <span class="keyword">else</span></div><div class="line">                prev.next = next;</div><div class="line">            e.recordRemoval(<span class="keyword">this</span>);</div><div class="line">            <span class="keyword">return</span> e;</div><div class="line">        &#125;</div><div class="line">        prev = e;</div><div class="line">        e = next;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> e;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>到现在为止，HashMap的增删改查都介绍完了。<br>一般而言，认为HashMap的这四种操作时间复杂度为O(1)，因为它hash函数性质较好，保证了冲突发生的几率较小。</p>
<p>##￥ fast-fail的HashIterator<br>集合类用<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Iterator.html" target="_blank" rel="external">Iterator</a>类来遍历其包含的元素，<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Enumeration.html" target="_blank" rel="external">接口Enumeration</a>已经不推荐使用。相比Enumeration，Iterator有下面两个优势：<br><span style="margin-left: 20px;"></span>1.Iterator允许调用者在遍历集合类时删除集合类中包含的元素（相比Enumeration增加了remove方法）<br><span style="margin-left: 20px;"></span>2.比Enumeration的命名更简短<br>HashMap中提供的三种集合视角，底层都是用HashIterator实现的。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">HashIterator</span>&lt;<span class="title">E</span>&gt; <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">E</span>&gt; </span>&#123;</div><div class="line">    Entry&lt;K,V&gt; next;        <span class="comment">// next entry to return</span></div><div class="line">    <span class="comment">//在初始化Iterator实例时，纪录下当前的修改次数</span></div><div class="line">    <span class="keyword">int</span> expectedModCount;   <span class="comment">// For fast-fail</span></div><div class="line">    <span class="keyword">int</span> index;              <span class="comment">// current slot</span></div><div class="line">    Entry&lt;K,V&gt; current;     <span class="comment">// current entry</span></div><div class="line">    HashIterator() &#123;</div><div class="line">        expectedModCount = modCount;</div><div class="line">        <span class="keyword">if</span> (size &gt; <span class="number">0</span>) &#123; <span class="comment">// advance to first entry</span></div><div class="line">            Entry[] t = table;</div><div class="line">            <span class="comment">//遍历HashMap的table，依次查找元素</span></div><div class="line">            <span class="keyword">while</span> (index &lt; t.length &amp;&amp; (next = t[index++]) == <span class="keyword">null</span>)</div><div class="line">            ;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> next != <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">final</span> Entry&lt;K,V&gt; <span class="title">nextEntry</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">//在访问下一个Entry时，判断是否有其他线程有对集合的修改</span></div><div class="line">        <span class="comment">//说明HashMap是线程非安全的</span></div><div class="line">        <span class="keyword">if</span> (modCount != expectedModCount)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</div><div class="line">        Entry&lt;K,V&gt; e = next;</div><div class="line">        <span class="keyword">if</span> (e == <span class="keyword">null</span>)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> NoSuchElementException();</div><div class="line">        <span class="keyword">if</span> ((next = e.next) == <span class="keyword">null</span>) &#123;</div><div class="line">        Entry[] t = table;</div><div class="line">        <span class="keyword">while</span> (index &lt; t.length &amp;&amp; (next = t[index++]) == <span class="keyword">null</span>)</div><div class="line">                ;</div><div class="line">        &#125;</div><div class="line">        current = e;</div><div class="line">        <span class="keyword">return</span> e;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (current == <span class="keyword">null</span>)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalStateException();</div><div class="line">        <span class="keyword">if</span> (modCount != expectedModCount)</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</div><div class="line">        Object k = current.key;</div><div class="line">        current = <span class="keyword">null</span>;</div><div class="line">        HashMap.<span class="keyword">this</span>.removeEntryForKey(k);</div><div class="line">        expectedModCount = modCount;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ValueIteratorextendsHashIterator</span>&lt;<span class="title">V</span>&gt; </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> V <span class="title">next</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> nextEntry().value;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyIteratorextendsHashIterator</span>&lt;<span class="title">K</span>&gt; </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> K <span class="title">next</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> nextEntry().getKey();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">EntryIteratorextendsHashIterator</span>&lt;<span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt;&gt; </span>&#123;</div><div class="line">    <span class="keyword">public</span> Map.<span class="function">Entry&lt;K,V&gt; <span class="title">next</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> nextEntry();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h3 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h3><p>介绍到这里，基本上算是把HashMap中一些核心的点讲完了，但还有个比较严重的问题：保存Entry的table数组为transient的，也就是说在进行序列化时，并不会包含该成员，这是为什么呢？<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">transient</span> Entry&lt;K,V&gt;[] table = (Entry&lt;K,V&gt;[]) EMPTY_TABLE;</div></pre></td></tr></table></figure><br>为了解答这个问题，我们需要明确下面事实：</p>
<ul>
<li>Object.hashCode方法对于一个类的两个实例返回的是不同的哈希值。</li>
</ul>
<p>我们可以试想下面的场景：<br>    <span style="margin-left: 20px;"></span>我们在机器A上算出对象A的哈希值与索引，然后把它插入到HashMap中，然后把该HashMap序列化后，在机器B上重新算对象的哈希值与索引，这与机器A上算出的是不一样的，所以我们在机器B上get对象A时，会得到错误的结果。<br>    <span style="margin-left: 20px;"></span>所以说，当序列化一个HashMap对象时，保存Entry的table是不需要序列化进来的，因为它在另一台机器上是错误的。</p>
<p>因为这个原因，HashMap重现了<code style="color:red">writeObject</code>与<code style="color:red">readObject</code>方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(java.io.ObjectOutputStream s)</span> <span class="keyword">throws</span> IOException</span>&#123;</div><div class="line">    <span class="comment">// Write out the threshold, loadfactor, and any hidden stuff</span></div><div class="line">    s.defaultWriteObject();</div><div class="line"></div><div class="line">    <span class="comment">// Write out number of buckets</span></div><div class="line">    <span class="keyword">if</span> (table==EMPTY_TABLE) &#123;</div><div class="line">        s.writeInt(roundUpToPowerOf2(threshold));</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        s.writeInt(table.length);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Write out size (number of Mappings)</span></div><div class="line">    s.writeInt(size);</div><div class="line"></div><div class="line">    <span class="comment">// Write out keys and values (alternating)</span></div><div class="line">    <span class="keyword">if</span> (size &gt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">for</span>(Map.Entry&lt;K,V&gt; e : entrySet0()) &#123;</div><div class="line">            s.writeObject(e.getKey());</div><div class="line">            s.writeObject(e.getValue());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">362498820763181265L</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">readObject</span><span class="params">(java.io.ObjectInputStream s)</span> <span class="keyword">throws</span> IOException, ClassNotFoundException</span>&#123;</div><div class="line">    <span class="comment">// Read in the threshold (ignored), loadfactor, and any hidden stuff</span></div><div class="line">    s.defaultReadObject();</div><div class="line">    <span class="keyword">if</span> (loadFactor &lt;= <span class="number">0</span> || Float.isNaN(loadFactor)) &#123;</div><div class="line">        <span class="function">thrownew <span class="title">InvalidObjectException</span><span class="params">(<span class="string">"Illegal load factor: "</span> +loadFactor)</span></span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// set other fields that need values</span></div><div class="line">    table = (Entry&lt;K,V&gt;[]) EMPTY_TABLE;</div><div class="line"></div><div class="line">    <span class="comment">// Read in number of buckets</span></div><div class="line">    s.readInt(); <span class="comment">// ignored.// Read number of mappingsint mappings = s.readInt();</span></div><div class="line">    <span class="keyword">if</span> (mappings &lt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> InvalidObjectException(<span class="string">"Illegal mappings count: "</span> + mappings);</div><div class="line"></div><div class="line">    <span class="comment">// capacity chosen by number of mappings and desired load (if &gt;= 0.25)int capacity = (int) Math.min(</span></div><div class="line">            mappings * Math.min(<span class="number">1</span> / loadFactor, <span class="number">4.0f</span>),</div><div class="line">            <span class="comment">// we have limits...</span></div><div class="line">            HashMap.MAXIMUM_CAPACITY);</div><div class="line"></div><div class="line"><span class="comment">// allocate the bucket array;</span></div><div class="line">    <span class="keyword">if</span> (mappings &gt; <span class="number">0</span>) &#123;</div><div class="line">        inflateTable(capacity);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        threshold = capacity;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    init();  <span class="comment">// Give subclass a chance to do its thing.// Read the keys and values, and put the mappings in the HashMap</span></div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mappings; i++) &#123;</div><div class="line">        K key = (K) s.readObject();</div><div class="line">        V value = (V) s.readObject();</div><div class="line">        putForCreate(key, value);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">putForCreate</span><span class="params">(K key, V value)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> hash = <span class="keyword">null</span> == key ? <span class="number">0</span> : hash(key);</div><div class="line">    <span class="keyword">int</span> i = indexFor(hash, table.length);</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Look for preexisting entry for key.  This will never happen for</div><div class="line">     * clone or deserialize.  It will only happen for construction if the</div><div class="line">     * input Map is a sorted map whose ordering is inconsistent w/ equals.</div><div class="line">     */</div><div class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class="keyword">null</span>; e = e.next) &#123;</div><div class="line">        Object k;</div><div class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || (key != <span class="keyword">null</span> &amp;&amp; key.equals(k)))) &#123;</div><div class="line">            e.value = value;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    createEntry(hash, key, value, i);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>简单来说，在序列化时，针对Entry的key与value分别单独序列化，当反序列化时，再单独处理即可。</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://supercoderz.in/understanding-transient-variables-in-java-and-how-they-are-practically-used-in-hashmap/" target="_blank" rel="external">http://supercoderz.in/understanding-transient-variables-in-java-and-how-they-are-practically-used-in-hashmap/</a></li>
<li><a href="http://stackoverflow.com/questions/9144472/why-is-the-hash-table-of-hashmap-marked-as-transient-although-the-class-is-seria" target="_blank" rel="external">http://stackoverflow.com/questions/9144472/why-is-the-hash-table-of-hashmap-marked-as-transient-although-the-class-is-seria</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;&lt;br&gt;继上一篇文章&lt;a href=&quot;/2017/04/19/Java%E9%9B%86%E5%90%88%E6%A1%86
    
    </summary>
    
      <category term="编程开发" scheme="http://jeromeliu.win/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
      <category term="Java开发" scheme="http://jeromeliu.win/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/Java%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java集合" scheme="http://jeromeliu.win/tags/Java%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Java集合框架综述</title>
    <link href="http://jeromeliu.win/2017/04/19/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E7%BB%BC%E8%BF%B0/"/>
    <id>http://jeromeliu.win/2017/04/19/Java集合框架综述/</id>
    <published>2017-04-19T01:56:44.000Z</published>
    <updated>2017-04-20T07:31:40.718Z</updated>
    
    <content type="html"><![CDATA[<p><blockquote class="blockquote-center">优秀的人，不是不合群，而是他们合群的人里面没有你</blockquote><br>最近被陆陆续续问了几遍HashMap的实现，回答的不好，打算复习复习JDK中的集合框架，并尝试分析其源码，这么做一方面是这些类非常实用，掌握其实现能更好的优化我们的程序；<br>另一方面是学习借鉴JDK是如何实现了这么一套优雅高效的类库，提升编程能力。<br>在介绍具体适合类之前，本篇文章对Java中的集合框架做一个大致描述，从一个高的角度俯视这个框架，了解了这个框架的一些理念与约定，会大大帮助后面分析某个具体类，让我们开始吧。</p>
<h2 id="集合框架-collections-framework"><a href="#集合框架-collections-framework" class="headerlink" title="集合框架(collections framework)"></a>集合框架(collections framework)</h2><p>首先要明确，集合代表了一组对象(和数组一样，但数组长度不能变，而集合能)。Java中的集合框架定义了一套规范，用来表示、操作集合，使具体操作与实现细节解耦。<br>其实说白了，可以把一个集合看成一个微型数据库，操作不外乎“增删改查”四种操作，我们在学习使用一个具体的集合类时，需要把这四个操作的<code style="color:red">时空复杂度</code>弄清楚了，基本上就可以说掌握这个类了。</p>
<h2 id="设计理念"><a href="#设计理念" class="headerlink" title="设计理念"></a>设计理念</h2><p>主要理念用一句话概括就是：提供一套“小而美”的API。API需要对程序员友好，增加新功能时能让程序员们快速上手。<br>为了保证核心接口足够小，最顶层的接口(也就是Collection与Map接口)并不会区分该集合是否可变(mutability),是否可更改(modifiability),是否可改变大小(resizability)这些细微的差别。相反，一些操作是可选的，在实现时抛出<code style="color:red">UnsupportedOperationException</code>即可表示集合不支持该操作。集合的实现者必须在文档中声明那些操作是不支持的。<br>为了保证最顶层的核心接口足够小，它们只能包含下面情况下的方法：</p>
<ol>
<li>基本操作，像之前说的“增删改查”</li>
<li>There is a compelling performance reason why an important implementation would want to override it.</li>
</ol>
<p>此外，所有的集合类都必须能提供友好的交互操作，这包括没有继承<code style="color:red">Collection</code>类的数组对象。因此，框架提供一套方法，让集合类与数组可以相互转化，并且可以把<code style="color:red">Map</code>看作成集合。</p>
<h2 id="两大基类Collection与Map"><a href="#两大基类Collection与Map" class="headerlink" title="两大基类Collection与Map"></a>两大基类Collection与Map</h2><p>在集合框架的类继承体系中，最顶层有两个接口:</p>
<ul>
<li>Collection表示一组纯数据</li>
<li>Map表示一组key-value对</li>
</ul>
<p>一般继承自Collection或Map的集合类，会提供两个“标准”的构造函数:</p>
<ul>
<li>没有参数的构造函数，创建一个空的集合类</li>
<li>有一个类型与基类（Collection或Map）相同的构造函数，创建一个与给定参数具有相同元素的新集合类</li>
</ul>
<p>因为接口中不能包含构造函数，所以上面这两个构造函数的约定并不是强制性的，但是在目前的集合框架中，所有继承自Collection或Map的子类都遵循这一约定。</p>
<h3 id="Collection"><a href="#Collection" class="headerlink" title="Collection"></a>Collection</h3><p><img src="/uploads/Java集合框架综述/Collection.jpg" alt="Collection"> <div style="text-align: center;font-size: 13px;margin-top: -25px;">java-collection-hierarchy</div></p>
<p>如上图所示，<a href="http://docs.oracle.com/javase/7/docs/api/java/util/Collection.html" target="_blank" rel="external">Collection</a>类主要有三个接口：</p>
<ul>
<li><code style="color:red">Set</code>表示不允许有重复元素的集合(A collection that contains no duplicate elements)</li>
<li><code style="color:red">List</code>表示允许有重复元素的集合(An ordered collection (also known as a sequence))</li>
<li><code style="color:red">Queue</code> JDK1.5新增，与上面两个集合类主要是的区分在于Queue主要用于存储数据，而不是处理数据。(A collection designed for holding elements prior to processing.)</li>
</ul>
<h3 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h3><p><img src="/uploads/Java集合框架综述/Map.jpg" alt="Collection"> <div style="margin-left: 250px;font-size: 13px;margin-top: -25px;">MapClassHierarchy</div></p>
<p><a href="http://docs.oracle.com/javase/7/docs/api/java/util/Map.html" target="_blank" rel="external">Map</a>并不是一个真正意义上的集合(are not true collections)，但是这个接口提供了三种“集合视角”(collection views )，使得可以像操作集合一样操作它们，具体如下：</p>
<ul>
<li>把map的内容看作key的集合(map’s contents to be viewed as a set of keys)</li>
<li>把map的内容看作value的集合(map’s contents to be viewed as a collection of values)</li>
<li>把map的内容看作key-value映射的集合(map’s contents to be viewed as a set of key-value mappings)</li>
</ul>
<h2 id="集合的实现-Collection-Implementations"><a href="#集合的实现-Collection-Implementations" class="headerlink" title="集合的实现(Collection Implementations)"></a>集合的实现(Collection Implementations)</h2><p>实现集合接口的类一般遵循<code style="color:red">&lt;实现方式&gt;+&lt;接口&gt;</code>的命名方式，通用的集合实现类如下表：</p>
<table>
<thead>
<tr>
<th>Interface</th>
<th style="text-align:center">Hash Table</th>
<th style="text-align:center">Resizable Array</th>
<th style="text-align:center">Balanced Tree</th>
<th style="text-align:center">Linked List</th>
<th style="text-align:center">Hash Table + Linked List</th>
</tr>
</thead>
<tbody>
<tr>
<td>Set</td>
<td style="text-align:center">HashSet</td>
<td style="text-align:center"></td>
<td style="text-align:center">TreeSet</td>
<td style="text-align:center">LinkedList</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>List</td>
<td style="text-align:center"></td>
<td style="text-align:center">ArrayList</td>
<td style="text-align:center"></td>
<td style="text-align:center">LinkedList</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>Deque</td>
<td style="text-align:center"></td>
<td style="text-align:center">ArrayDeque</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td>Map</td>
<td style="text-align:center"><a href="http://liujiacai.net/blog/2015/09/03/java-hashmap/" target="_blank" rel="external">HashMap</a></td>
<td style="text-align:center"></td>
<td style="text-align:center"><a href="http://liujiacai.net/blog/2015/09/04/java-treemap/" target="_blank" rel="external">TreeMap</a></td>
<td style="text-align:center"></td>
<td style="text-align:center"><a href="">LinkedHashMap</a></td>
</tr>
</tbody>
</table>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>今天先开个头，后面会陆陆续续来一系列干货，Stay Tuned。<br>需要说明一点，今后所有源码分析都将基于<a href="http://www.oracle.com/technetwork/java/javase/7u71-relnotes-2296187.html" target="_blank" rel="external">Oracle JDK 1.7.0_71</a>，请知悉。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ java -version</div><div class="line">java version<span class="string">"1.7.0_71"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.7.0_71-b14)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 24.71-b01, mixed mode)</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul>
<li><a href="http://docs.oracle.com/javase/7/docs/technotes/guides/collections/overview.html" target="_blank" rel="external">http://docs.oracle.com/javase/7/docs/technotes/guides/collections/overview.html</a></li>
<li><a href="https://en.wikipedia.org/wiki/Java_collections_framework" target="_blank" rel="external">https://en.wikipedia.org/wiki/Java_collections_framework</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;blockquote class=&quot;blockquote-center&quot;&gt;优秀的人，不是不合群，而是他们合群的人里面没有你&lt;/blockquote&gt;&lt;br&gt;最近被陆陆续续问了几遍HashMap的实现，回答的不好，打算复习复习JDK中的集合框架，并尝试分析其源码，这么做一方
    
    </summary>
    
      <category term="编程开发" scheme="http://jeromeliu.win/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/"/>
    
      <category term="Java开发" scheme="http://jeromeliu.win/categories/%E7%BC%96%E7%A8%8B%E5%BC%80%E5%8F%91/Java%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Java集合" scheme="http://jeromeliu.win/tags/Java%E9%9B%86%E5%90%88/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://jeromeliu.win/2017/04/18/hello-world/"/>
    <id>http://jeromeliu.win/2017/04/18/hello-world/</id>
    <published>2017-04-18T05:14:45.733Z</published>
    <updated>2017-04-21T09:38:56.301Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
</feed>
